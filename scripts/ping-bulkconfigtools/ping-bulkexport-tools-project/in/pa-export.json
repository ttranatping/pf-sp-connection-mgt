{"version":"6.1.0.3","data":{"acmeDefaultServer":{"id":"8572f98e-482e-41c2-8a3d-6a0b2fc99734","location":"https://localhost:9000/pa-admin-api/v3/acme/servers/8572f98e-482e-41c2-8a3d-6a0b2fc99734"},"acmeServers":[{"id":"08eb4cbc-20ed-409b-82c6-12fd0c92eb71","name":"Let's Encrypt","url":"https://acme-v02.api.letsencrypt.org/directory","acmeAccounts":[]},{"id":"8572f98e-482e-41c2-8a3d-6a0b2fc99734","name":"Let's Encrypt Staging Environment","url":"https://acme-staging-v02.api.letsencrypt.org/directory","acmeAccounts":[]}],"adminAuthBasic":{"enabled":true},"adminAuthWebSession":{"sessionPollIntervalInSeconds":10,"expirationWarningInMinutes":1,"audience":"PingAccessUI","cookieDomain":null,"cookieType":"Encrypted","idleTimeoutInMinutes":30,"sessionTimeoutInMinutes":240},"adminConfig":{"hostPort":"pingaccess-admin:9090","httpProxyId":0,"httpsProxyId":0},"applications":[{"id":1,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599615017875,"lastModified":1599614117875,"requireHTTPS":true,"name":"PingFederate-Application","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":1,"agentId":0,"virtualHostIds":[5,7,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":5,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599615017689,"lastModified":1599614117689,"requireHTTPS":false,"name":"Deepthought Product Admin Service","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/dio-au","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":4,"agentId":0,"virtualHostIds":[10,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":4}]}},{"id":6,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599615017761,"lastModified":1599614117761,"requireHTTPS":true,"name":"Deepthought Product API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking/products","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":5,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":7,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599615017760,"lastModified":1599614117760,"requireHTTPS":true,"name":"Deepthought Bank API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":6,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":8,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599615017741,"lastModified":1599614117741,"requireHTTPS":true,"name":"CDR Register","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":7,"agentId":0,"virtualHostIds":[13],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":9,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599615017810,"lastModified":1599614117810,"requireHTTPS":true,"name":"PingDirectory-Web","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":8,"agentId":0,"virtualHostIds":[14],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}}],"authTokenMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccessAuthToken","signingAlgorithm":"P-256"},"availabilityProfiles":[{"className":"com.pingidentity.pa.ha.availability.ondemand.OnDemandAvailabilityPlugin","id":1,"name":"Default Availability Profile","configuration":{"connectTimeout":10000,"pooledConnectionTimeout":-1,"readTimeout":-1,"maxRetries":2,"retryDelay":250,"failedRetryTimeout":60,"failureHttpStatusCodes":[]}}],"engineListeners":[{"id":2,"name":"Default Engine Listener","port":3000,"secure":true,"trustedCertificateGroupId":0},{"id":3,"name":"HTTP Engine Listener","port":7080,"secure":false,"trustedCertificateGroupId":0}],"globalUnprotectedResources":[{"id":"3a2b5451-00ec-40e3-9556-183452460586","name":"StandardATM JWKS endpoint","wildcardPath":"/ext/oauth/standardATM/jwks","auditLevel":"ON","enabled":true,"description":"JWKS endpoint"}],"httpHostSource":{"headerNameList":["X-Forwarded-Host","Host"],"listValueLocation":"LAST"},"httpIpSource":{"headerNameList":["X-Forwarded-For"],"listValueLocation":"LAST","fallbackToLastHopIp":true},"httpMonitoring":{"auditLevel":"OFF"},"httpProtocolSource":{"headerName":"X-Forwarded-Proto"},"httpsListeners":[{"id":1,"name":"ADMIN","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":2,"name":"ENGINE","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":3,"name":"AGENT","keyPairId":7,"useServerCipherSuiteOrder":true,"restartRequired":true}],"identityMappings":[{"className":"com.pingidentity.pa.identitymappings.HeaderIdentityMapping","id":1,"name":"Default Identity Mapping","configuration":{"attributeHeaderMappings":[{"subject":true,"attributeName":"sub","headerName":"X-SUB"}],"headerClientCertificateMappings":[]}}],"keyPairs":[{"id":5,"alias":"Generated: ADMIN","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uOUN2VXdsTTd5bVhnQmc0ZFZiTjMyZy51Y2Q3MUsxUzFWTmRwOVlCbTNRa3Z6Smpsc1lUeG9McUpkVEx2Q2xtSzNBTGctZVU1SjVrbWYybVVDdUNCaFJaNUt4d3BNaUNEMTdad3VaVXhFU3RLRTlBTXhHWFZQWHY2ZG42d2I1MjdkT3RraFhkRlJqdmd3YktWcEVvcWVvbThpczhhdGViTnlpRVJjOW9qaW5xLVZCU0Y4OTdvdlhwTkxOaFVsc1VRTmx3aThkYmh1SVlBNFozNi16TVBUMHRqY3RRa3JjeDhMSHpsX01YYVZsUTJHSlJYcFFDMEc1bzhfdXQtRzl5UmJlbWVpUGtTYTlPRVdFRVN6aWNTVzRET05nekJWNkZHQWF0R2NfeTRuRWNGbEtjbmxvbm55S2lDeUFuRUpseE8yNF9ZSFBDVUZhZVZGUnBaQkgzTWxfLU5yaC1JQzJ2ZG9TSGc4S3ExVmZxMWpvZlRFamQyQlZNLWh2T1dfQTJ3VkRGdFlyOHB4dmxFVWhjNHlqWWg3OTNkSnJZX2NJMDFDMmpnMmYwNWQ3WGVEdktpbXdJd0k4YUlmVFdmS01BLW1aN3Vra2RzT2NJTzZrVVNJYV9ReHlIYTBQX2JqYzkwZDQ0RzlNWTdqcTFXbFBXRWdwVThoekw3M2pXU0lNSHQyZlZQWG9UVnpRelhNYzlRTmZMMk1PT1JSZUtaVkQ1aEtqeXFfRnFHT3RwWjVDWTdETEhJaDllMDZkVXM5cmU5QjBfRy1RakZFX0E5d01EM2JfdFlURDlBWC1HZmx0RkdqWUtOczRYM0NSSHY5VFFIRDBxb3VVMEN6QzhXXzBrYm9GcklRVUFSdENTSi1VZkpaRllXLXVEMm9OeE9KMTJSNnlrZVA3RFZtemp1NENLem45U0VpeUVINXRIUzFsc2tDNzVxTVhybU4teXY0b3h4WGlMeGE3YkNaRVBlVERtcUdoNUIxeGE4RWV3ZmVYMHFDejdHMXdPcjVkWTdVTGx5NEcxbXBkanFNakZHQXRpN0M4TFlRTENRU2kwQTVmNGZiMk1QWFBfeHRhdDRYQlJ6RWdJcm1vOGZDc1U5dEZoREZjSmhRTmpVLUthUWVMMXRpbXBSX1VRalVIVTc0dVpTZ1k0d0V3amlScE9ENXdQTFhlV0loS3ZjeUd2YTJMTGpqb0RJc1g1c1NkOVAtdWpld1hOc3ZQRTFIV3RiRXNJYzh5LXFjQnYwWjRVV3JHVVJBNmJwZmhZdExocFh3SHRpdy1vOVdla180eU5kQ05nal9jY1J0NTJNaUhheUhheS1vSk1kNmlNaEZwQWRwTWhzUEx0Tld0cmtnXzJmMGJyYXAxTVhSV1pZUEpYa2R6SWd0bkI5Q3gzYjhxUFY2YzJDTU03NFoxTW9kb3AwNHBMQkxsUXdyekpFM2xPTVU0aEt6R0QxZGJEUVE3eDdfeFdTTFJnWGNhT2FsNGlJeVBPT3g1elotWHZrZVJYYkZOeVY3endBQXhXeFE2VFI5N25wQVAwREREX2l1NU4yT1FURVZVVzlUM0d2UTRMQUx4RW5kR25jVlBBeThwWnlwMS1IWE41TDQ3UnR2QTBVUzI0clpObUhyajBuSEhpSXQ5emNfRlJfMDNOeGFpbmt4c2dVLWhQRlhHZVR6VzNGbWlTdlMyM2hvek0yMElfNGxuaUdRYlVhdlVpbExuR09FWGVxOFR6amFra252Zks4cnJmZFBsaW9KcFFCTWZ1bUNNdTJWY1FVNTZEQlppc0Fmb3pqQlpNemVzVzVhSE5Bc3lNYy1scG94MXdweGpZblYwZWxUd2x2YndROVQ4ZVg1bXlrTFpOYWJmTENvNzhmX1hnTjNfc3J2UXJJZEw1THo0NE9BQnV4RTFnRTZ1dkF5dzZrMVdUS1lKUzBFNXVlWTFkTWlOeHh0TzdSZ3VDRjBVUVRrYlhtOU52Ynhac2ZwRzBhQ2RBQ0xJYW8wUm5ONGljWVhpcE1YU0dzNzBWdU9sc2RWZ1ZGWjVWbFFzV1lSdGdWc2lDZ3A4Ulg2SHhraVV3eHMtT0RMcUd2aVFGM1VKRkFMWTZTSFh6OUQxcFNLTFc1T2ViUElKcE8wZXh1SWloTXBtd1hyaDZfUmJTWXE1WFhuY1VhdDBhYXF1SmRnZWJiWEdPQ2ZEdjZzTHdHMGdpM2UzVHNFc1lBa1FlczVKN241cHRWVjdCX1lQOW5HVFJ3VjlrS2dfb2N5VkxWYTBXaWNGR1VzNkFXYU1Nbm9PS3d1Ykc2M21ZUDdNWlJCYnV5OTNJQ0hOaVdnbjd4cmRfc0dpc0ZCOUpMZzlGTzl5S3doaUQ0SDFlRGpoS21OUGJzNHYyamgzYkJVREpJdGFtNlpvLXFaaFpjSnFKWGo3MjhlalBFYS1ZQ2dSWXk2UGNhMl96dl85YnAzOXpCdHdGOWx5NjJVUS1Ddl9qck9wWGlOb0FVTHowYlVPbjB3bmRTQzBMb1l3NHFyV1hpYWZnampVN2tMQlB0OFA2NWR0dXJ6NElkVTZFYllpNGJaWmtIaGpjWXV4emdyd3BmVjYzaWk5OG5QV054bGFOQ3hVUkFicVg3Z18zWTZtcTVjZEdtR3FWSXo3Zldxb29mT0lvU1h6cU9OTElHbEtleVJvbVdoc0lTZUR5MVYtcjRTejh0cDVSRWYzUTR6czc5bDY5NmIwajRjWk5JeV93NnI0d3NIWDJQVTBQM04xdUstZGpRQ3FMYXB3M0g5RGJmY2JWZ21BSkgxU2lSWkZSQnhxV0hGWWJ1MWM1RzB4RUhDZUppV1BlT1dLYUdyM3JXTFFFOHFOWU1Lajl1U2owbWU3NG9vLWlCSlJpa0NtbFJtdENDa3dZU3ZEdEdwa3UtUkdBZDdFYTVWUDZJR2JQbXFsNXVaSXRyUVpwOEZPbnA2TEo1R1pueVRsTDJWeFVPSDVVRFZOaEIwY0xoTjVTUS1nekppYXNpU3UzbzdIaGhDVGxJYjFZYXNhRGRBWGE0dXlsaHZhbG1SbmVVZm5BczE4c1pmM3NSaUJibWhqNEZUQ2NiOTR5akRCbGZ4dmdPb3UwSGVTTGV5NmV6MVVKZDg3X0NWT0d3WWxReDhMNGVkcVhWa0paaFFJLVBLYzcwUFhDMDVrRUNMVzA1Mjh1cWtqZmdaeFVFS2F3TFcxcGtnUzhrR1E3TTZ5czlGVFl6anloalpYbGZXOFJmRkdmX3NGbm92ejVqYk5GV001Sk9PODJJaXVxYXhrNjFpUm1MSzJaaWdhYXZEWUxrX3JkcTMwdTB0Zzg0NHJzS2ZGeTJYaC1lNklZdUZOUTVGR2dtTkQ2QnpFYWtUTmdzTnc1YklGa3A5eThsQS1Gd3NFbVZNUDFsZDF6elZwN1hpdkE3dG52WGN2N0l1WW9QbmN6QkxVdWFUZHNuRGxGYVBuMWgwci1RT0ZQNUNxOTQtYzZod2NrOE9vMWRXX1poNG55WEpvbWE1Wm15UDF2MXoxazhWaWsxeW9oaUZrc2JleDdWMmpiQUdmWXJ4Umk1TklkV3RIc28zQmdGOHRoRmJ4WU0yWDQ4STNtUWZyMW43QkFtY3h1MUg0NkxrY0xNUkVtR1VPNDdsa2pLNzFWRS1GazlmNDZLbEkxRVdtdm5TMExGR1duTXRBWGdhZURNN1ljaUs2NktKSDQ0M000d0liV3RkM1dqYmtFZjctODRGcWIzblpSQ2tBc0VWTUFSR2sydzBRNXhXVzlsSmpCNkhudzRQNkRhOGVoQVBFRy1OVThWcGF0Ry1Qdmc4UGZSemRYN0xVV1pjNlo2YkEzZmU4Z2ZOTlNiUGR1cEdZZE5TOFNqSGdZVGExN1NVbGd6ZjN4ZnczaTB6c2xjcTZ3VDljYXBxUjFDTzB3VWs5aVRwd2E4cFA3RDNwTXVRV2ZXc2EzbEJLRVNIVWppMXk5dHlXOEI3S2dVTlV4ZlRLQWZncHhkeDRKaGwtWmxpMWx1ZUs4ZXZ1SFo3dkxsM2pIN2ZWSDlmVEJXa1d4dDhZZUdraFFmcFZtb0wtNjVRQzRJMzZEWS1GQUpzWHl1V3A5QlhTejdJS2RNMjhBdnJXZl90YzB6QWRJak9UaWF5akI1bm9lVFhGU2ozZlV4bW1tcWU1bUFzZzlCaEVkNUprbTFjTFpZRmJZV2x4NHZWcXVQMkE0Znp5MkVaYmt1cUdVOTN1T1FVcWljN3hETDNMQXphRnNoMERFYjRabzMwSkdCdVMtX0JXX0M4WUQ3eHFuN2IxT1lPeW5nWVB5TFB6eGhLRjJUSDJCRXViYlpkTlFBQ29RcW9rTHg1UTB2RDVKR2Z2bmVjaFNfQmJHZFlxSHNfSnM2NnFoLTJWMHdCUFAtUnYwSFpndjNGOXRxOUZneEVmZWdRWjdpZTRMQm5OS2ZFM1IxUUplX2NqNDZJaGdzS0VCSEMxVWFLU1VSUGdvRWFseVpjRHcwdUx3TmQ4enVlT2RWdTNraHVyZWstREZCdVRyeVlscnlpWHNkblFWSzNSLW03cEdjVEZBbUtYdXp3cVZ5WUc2Qzc2WFlpMzUzRkpzMURGOUhITEJCWXYxTFBpLTJ5LWF4b2kwM2tHUXJDSGMxS1ZFS3F3M25Vd19BN0FGTjYzT0NHdkdZM2ZzNm96aF9qWFl2QU43a3lPMEh2MjhWWGxrWl9TdVJ4YXNUMjgtUGE5ekk3MDVTeU5jcm5zbkUwekpNeHhnN0JJb2h1UnUwLXJncHU1R3cyeHpMUW94UVZldmhMX3JUVjRKeTVxOUZzbTFiZFNWTElKWmFkZkpmREVKelJwT0M5QzUxeUFKQ2cuRWNZcnYzTGhSOE5jZ05pQTVXRUlqdw==","password":null,"hsmProviderId":0},{"id":7,"alias":"Generated: AGENT","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uOVBYVlRJSUN5WkI3VS1feTFydkYzUS5IQ19BejhZYUs3X2VwZTIxckk2bHZkWGtmWnNlNTNPc3dhblBsOVhxOFBSR3VJaHROUnJJNUZZV0c2NWRQaGFyUE1mcWRCS0dmbGxGZlNXdlVvR2lHX29JS0kwMnY2NXRHXzRFN21ndmdETE1sVGFDZzVpNTFqRWFRaE9Wc19IV3JJOVloc0lJN0RKQlBHMzl6MTFVcXM5bm8zdHlILW05bWdTMXAxbXh2am1mMDFUQ1BOQVB1NlFiLVA3MGhsT2dad3VRYWQ2R0FtY21uR2NZVnR6X096aGc5LWJaSmhGQTFKd1M1N01TM3doNzhtVmN2cFVhQzA1QVU0WFpVWEtzSnJUT1JLMkQ0ZkppeWkxTUJ4YWN6UHdNeVgzOXJYTGJGOHdCdGFxejJSMFFXZndRa2t5WVoyMWM4US12MG1DLVA4NEppSjVQMTBMM2NxaGY5b3piVi00QW95elNHREwtYzZzS2J0cHlMVjY4SWNicjFfLS1jRHpjZEV6eTVUQ2pZLUdwWXhVREhhcWhKUFhLOG9kRjAtLUVIWjRHR2RmZ3pxRllQX1pSQ2VCcF9iZmpkbzM1VE96X2swMkFXSGhRSGRSWFlIYnFadkZ1VDZwSmVaZHc3UGlnYVIzUkdsZTJlZWltMktqOXR5U21QWmpMOUlQbTVzYmFwQ0dFMlNKNGp1UnJOanRhX2Nnelo4V2oydVg0OGJKQk1TWVloYmpWbDhoQjZDOWF2aV9qWnhEbVBGYi1sd2I0ZzVoYUw2TVRFV2V0NUJHdzJPZlcxckJXcGx3aDNYdEpMZk8ta1FkbzRsRk1ud3ZBeGFkSEpHNU1vUFFqZzhad0ltNWVwUWxUaENSS2NzZ19JVkZfMFNMdHRkbGVXUlVId2t0cnVicExTbnRzWU83TjExdWxUYmtfZTVyUy03QjlDR0E1am0xa3VpT1o1LUMtTnlzc3kwaGtOZW9nQzJqc2lMY29wa01vNXVHVEJ6MjNwMGc5ZGRVaVYtR3BxYWJybWJCVFl6UjNCU3BySEVUaGJwLThrODE1M0Q4eVZ1T25WTWZIQy1GbnYtNTR0bUk2TjFpSjRBLXlLS3pmZGtpQkw5UUtWRVFIZnlOVnJDTXd1b1lwTFh1cXlTUVJDVWF1dmVwM1dLX0dxeFc2OTFWNXdhR0E2R1BGUmtNVDJsem9raXJhY091S3RjZFFfaW15OEg1YWhReE9jUV9wTER0RWY4REtOMURIVDFEX01JS3pnTzNHeDlXR2YyYnpiNFFHSUZibXB4M21TeWtlTmlrT2JCcE92MzRRVEF0b0ZKVzhNaF93b2VjdVd3VzZDak5XUHhEUTJaSDNiU1NtTTgtenpkbWZrN1hfaExZSm5QbE9UR1JxSHZtbENDUmV3NzBuOG5ROVVETWpTcnZySnFWNGIyNlBWRDI0VFNLdW5Ca05zRXZfQ0lIU0pZN2dNZmt3djNONXVpLWRWWFVoZGE2ZWdGVDNZcUxWQW1SVGJHV1kwSkRTUzR1ZzZ3M3poS3U4Vkk5ZFNRUzBmaTlQQzdOVk8zTmJlZXJYb2pZN2JrcGYySmVIOTZVUzZDVHo0MW5YX2JuREVVbWEtcFVqTGVKbWJTZGcyZjdVZkU1RmUxSGZFVks2S05Od2ozQnFzNGlhZFczeEgwZXVPaFFTUXd4ckdZaXJuVDNvTy1LTWh1NldHQWJBUnB4WFc5RlJsQ3hJOUxlUzQwTHBVa21rbE5PeFhTcDZFeWp0a18zaHMwLTZzcm90MnJ2dElSbWExMnBvQXNvdEcteWFXeTBvTXk3UU1sX3BJLUdPeUNIaWlPclM5cjVOeS0wbzhXUnkxUGJJRUFoa0xod3Z5X1dyYzZJZTNOVmplR2pNZDA3UXM2SE5SSENYSmI2RTJYc1l4WG91WHZ0WlMyanphY3FTaFJrTnBuTThnUFRGUkJwSmJBODRla2l2WF9yanB6TXdkTFEtU2U5cHUyY2JHV29BaXcyVkpmTUk2YTNNMzJJbFRXTFlaakJEN1l1R2NlOUYxYkFOczZKV1lqaVFlV2tFcVpVV0xaSjZFZFIydVJkVnIzVXFOU3RmdVc5TWRVWDF1cjR1OG1IWnd2UjB6dFNxdk9ZX2VEaGJabHVfQlZPcFFGYTRCeFpmOER2VVhfYjVBa2NjeVdGcW83VWxWT2pPUjBvdWJDZ0JVQ3g0Q0ZWelNUN20zZzFneGUza0Y3ajVDYmMyWVh2U2JSS0ptYmF3MUR3Zmptdlo3VUd3RDBiT3podFlwZjdTemhmNExnOXlMbFF2bEl4WGVzUFhySjR2Y0lZQVJvTC1aaVRBeHhTZXcxSUVlQkd0bV9GM3ZfRUdXamhVR0lxSTBqNDFkREZ6dFJ0alZrRzFBVy1GeU5zWE9NNlZITmNsRl9JaEtwbmZLblRLdHdzajVWUGFwQUhhZDMyYy11SllMNjFJUFc0Y3VpUXR3RFlNVDVpdXM3MWZVYVVnMEc0T3VCeFVPeXFGY2ZnY29fdmJDMGpXNTJSNzA1SmExZVpqYmRKSm9NaTNoYjhETGNwR2d2eE5tYUsyaXZTM0ZaS192S0NRdFZHLTlNZVZoMTU2MHNRYzhrdWFoR1RpZHlpLXFubWZGMFFheVg5Q0Z6TUpRRloyZlhjQU92X1RVR0hlbzF0NDcxX0duTEhaUVFiNGRua0lzeUV5bTFwc2h4NkxlVmhwN1JXQlFQU2tiV1pUVEg5eWFXbzhtR05WSHdFeFpUY05Kd1UxTW1SZ0pmclRGZGpOZU9DUGZ1ckU4MmtIV080bWs3UzdaZllKdVJFTTdFeVJuX0xNeTFoLW9LeFpxLXVoX1lRaWxxc0V5SUVJNklITXk5cWxLcmtvTkZJZmY0WGtMbkQ0Wk9FS3dMQjM5NkJWUTUzY3NFZkdCLVBtVy1Va2U2cjV2aEhRYmhLVXozaHhlcHIxRExaOXFrc0NnRno5RzgtTm80UHA4R25Sd0FZY0JINDY5Z0dvd25KSXhNd18tajNoVUVRTUgyQ0xtaUltcDNGU1FmcUJQa1UyTFQ5UnMxVmQ1R0I5WDIyT2dTS0E2T25RM2RwSkhGZUV2QS1BNWVDY09abnVPUVRwUkxSMUZMUXNHVzVMbkVsLUpGcFdXZnJfck9qbnhVRlBCWjgyU24yRU1Wd2xvTW9ZcVluZGpsV19LSmVjNVpqSUFjTWZiUTB1RG1QVHY2ek96UXA4ZElmSG43R2M1S3NUemVRdEpUaXZRcHNKcElZS25rWTc4U2ZVN2ZZTXc4NUZKUndWa3dJblA2MEtIMzBDOWUyTzlXRTVXbmR5Qlkyb0lnRWtlRjd3bXlvc1ozeUsyRFl6Vi1nODZRWVQtQ2JIWXJDWnlBM0t4REFhclhkMy1BOXppUHIyYjZzanh1MGNNNnByTzVmUmFzVGQ2SlZtUG5FQjY2bWJBMVltZ2laVVdsOEVONFh6VVp5UUJPaHNIOVRIcFNpZTRTTnlIbjczTDdMd3lFMmRHdXJXNG80bkkyVzJndHpFWVd1cDJGTTI0a0tVTS0tczZCR0xjRjBsdDZ0SDBpMGU4NU1DZkR2eWdqVnByWEtRcW4wQlFEX2FhaDVPTjJsMzBiczVEX1NkZ1pNUURESDJGdld0M2xmVVo4azlJTlhjU1FBaDRrQ2M5cUlPVzBpUFpBcU83Rk15WjJIdlRoZ2RncEZRcklIT2I2RUhZakQtRmQ3Z0tFS2JIZG5JMTdGX2xnY0JjZEZHRU5OVVo2RHRvaU40TXJIZEFfWXRZb2FXTThQR01CZ3BJNklvZldOc082bFRCNHpDLU5jX2VhWXljRWh4YzRBQnFHZjNIbFlQUFktNXJueTUycFBHcm5vM2k2YzYxaFEwWWxNYUNzV1JkalNWZDB6dEpZVEdlaHlyMEdxV1lKaDB4ZnZGWnZkQmc3cDZVVV9oa1dmemtwYmNLelQ0cm5STG5ZaTdvZ1RYNUd0ZEJMTlF5UXpTdW1YMVhsQU9lZmdYNUtQOXM3dm9yZF9KV0k4RWpLVmZ2a1VnY3FRZ2EzYTI4a1FVa2dKdGxhZmJLWnJtTDg0MHZqS0ROekZrMmQzVkZrcXZIZFlCbmFpWi1zZGdqVGo1MWN6RHk3YWpOSm5uM1ZkMW9GWlBIZ0RnenVpMXgxRUN2TkFYd1J2MklZZmpCWDdoNUpJdERKcU5zMHJtUjUtOHg1V3JrMTZQM0VwcG9qZWV1X0hXWElJNDg1TVczOUVvUUJvVjBtSW51ZmJJZzY3di1IR0loNzNEV1FpLV8wajY3dF9HdlJmR3RhVk9kRkE0VjRQbGgxOEduR1RFX2NGaGhxVFBkMXlZa2hYVlluSWhKdkV2YkN2am9CNGhDYWREVDNkVjM3N3pkSkJIVjJCNl9FYjJKR0NhQ1JqbTYtNllVUUJvWll6dnVKVDFidFB0ZkpHQnN3TXVYZGhpR21aNkoxbnJxZGVrZms4Tmg2YU9MODZaQUJjdVRCOU5laFBoNmRmZGMtcGlZZGdyNFctUU9lMVhJQjAxRWxHTEVZaTlob3I0aHNmR1ljNUFmNmQydHhUVzZiVkJvWklvTElrd2dmTm9Ma3ljLWxXdmN3M2t3YklGaUJzQlVxVjFVZU04VllJOHVmN2Q2U3ZhY3o1cmxSWkZpMjZtNXVlbDFhMFQydVh1cmZQWk1jNlFIa3ByVEJ3UlZEbzhYSVcwU0EyZ05UUWVoTURneHo2aHVIaUFDY2JhcEJIY1FYeDJPZ1ZOa3I4blU5ZkROVWlHWnRtYkh1YVgzRGRmYU1acXZaU2VYdXRvSUEubjQ5WkhfcXlXMWdJOUg2S0hKaXB5Zw==","password":null,"hsmProviderId":0},{"id":8,"alias":"Generated: ENGINE","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uRmV0RjBFUGF2QTE3c25qM0Q2UTBFUS5DRTNuZFRJcWJkemRQZER0VC1VTmdhTUNoRFU2VGs2cHcxcVNjR2JoaDRlUThPNXh2YXZ0dmVNeUdhNnllZzNuenhLTDM2dUhHdXZzR0ZuN3IydFFDVlExaEFlSmtGXzlOd0VVWFh5eWxfLXk4MDRnVU81UkM0VnQwVmpoOXRHU21RR0hsR3hXejVmNjQwNkplNnZnVXVWQmJtVVFyNktWQXhBTGZfb2pZQ01FNEFCaVVfUDd4X3NpTTJjYlB1dGpDdjBzaU5FM1FFcU1RUGltWG94SGN5dXJSMlFKY2JaaTJSeXh1UW1QcmM5QlNFZEhBZUptVWFJWEhmbk50OUotSHh1VXNYR1JlYVR5NF8tTmh6bFdINFM5S3N1NDl6ZHg4d1ItQ2dFbm1vWUFxYmVPNEZKSmdoWHBnTlhYZkxLSjR2R21Gd3dmWm9udG85eUxhU1J4a1d1RFlrdzQ0Z1dlVlNUNWZua0V3UVZ6N0pTOVNfSkdNNi1iRU92VGlWSEZ3Q1JxelVnTTE0aWZXY0dWUFM1Tm56S2V6dzJDWC1QMTZqaWs0Q1NQblY3UWZoeWRPT1VUYXBCVl9hQ2hzNjQ3bUxxRV95RjdDSWc4R01raENuMkZPOVlwWU5BTTJpODlBOEZyVzUtZ2JZRUozSlpRZjhJbW1zYjFEMjhTTVF1UUgxNTlvZmt1WndZVG50YmF2ODRLYXpsOUVjYUxMOTNXMWRiUFE5eEE1NEprNDhwMEJXQ1FPTzR4bm1lUERaQWpqUW55UURISnRwb3E1bUdKU0RXMkJ6M183ZU1aZWRDZlctcUQ1aDhVTUU5Z1pOYS16VjdqRmZfYXFIdXNXalNGNnRQclFVTXJfOVg0NXRxYXhGRDhMNnFJazlnSGctS290RzFnS0pqTkxCYlg4R3F0enNaUGlzalRVMVRlUDJ3RWtDb19aVS1WYmJfRmNEaHR6aWRUOWZBeU14a2hHRWVqRXVwU1MtTDRWaDB0MktpVXRSTXJxbWVINHRfdkVHWnN1RDJXWldVMVFMRkRkazhOVk41R05tZTNzNTBQSDdIS0JYTFJqMTg0WTdnWFozQU51RUNCVVRGZkRxMkNnbktaN2VsQk5uLW45Mlo5VHIzMFdNdHFhRkExMjNxcUlmUkRMd0Z5YnJDM01RVGlQYXREVlQtNTZqcktWU0VNejhBc0gwMTczZ2liRExkMVE1XzJiQnQ2TXhtN3lCcFR4dEVKS0NiYXlnZXFUV3JVMUlfd1lSSDVWX3FHUHlMRXFaR3FxeGpPZGFsWV9FeHZ6aFh6UmdkSnA3M3ppOVE5cXRXODdPbG1LbGVYX1VIek1STUFBOVZ2SzhlcmlNS0RsMm5sYzJsajlVbVlpem5Ua1ptazlKdWQ0c0NpRTFnZ1VUTFgwaU1xNVRGd3kwZnhOejdqRTEyMlVRcmZSQllOR1BhOW93T3QxM1NhVk83aGUyMDdOTWVieTk1aUlSTlRDZkdCR19vT1VCb25BekplcEZ1ZzFkczhFSVA5SGd0WUdCcmNxQ00zdXFENndob0JDSmNnbnY1aGlCUFc2NE1DZ19zbi1hcVVMYzRRMGxPNUl5dWtYZm5jU1ktUmlBR3RUd3N4Wmx6LTFhbUZNQnZJTXhsWFJQUEVPcUZKR2RNLXRKRUhhbllFYVlBNlZvNmhaMnJEZmQ1bF9jUzZiSXpqYVJmWGlSLUh3d2p4b2tKb1ZScW9xaTd2Z1lKU1Y4QmlkaFkyNzdaTzlHOTU0dGJoMmVQNVhBdXlEVEt6TXhCRFpHOHFLdDNLSkFCczh3X1RzRkl2YnVWdzlMWWpHMktjaUVDLVU5bGZ1Zm1kS3VDaFFyZUtSZWdOMXlaRHlzblZUZXNUSFBCOVVLQVdKMGx4ckY5bWVCQjZOSGpXckN0bWhyN1E5QjZ1NjdJX1lDdXY5RzlXaGRFZ09KRHFnZ1RVTld3dVhraEZnMUFGTDBLa3lidVlnSDFNYzRYeTRzUHpDeFRnUFRpQW50NkRHQUhGME9MNnNaaFBBQ0FJdVB0UjVNM2xlbnlSWjh2YWpzcXZoX2FnVV9HOG5JVUZlc1JwTG5NM2RQUDczbHhVNFlHYmlHZUMxNDg3clYtRTVMR3NlUjBuOEwxYTNGUVZ1dDFqS0NLV1lhOXNuTE1pcG56Nl9iMG04dU9uU0JxMWdqSmZ1a3UxZmsyQnpRbjdhRVB6Mi1EN2F3ZG1EVUlpUnAxZC1uNFVXZlRvS1NtdTRmVHZYTHM4SGo0eWpXWUluNFQ1ZENjM2hCTkRYR3dyNHdfODFVWHI4Q09FUzVPZ0hYZFFYRzJka1dkRlVKM0hVTEowMXlCQ0Q0bTdKcXVSYUFLY3VVTjVtVWZzeDZ0NzUzcWh5cXB5Y1RLLWJIaHJ3TkJzN1RIWmRBRmdra1QzNkpycVdlNW1KN1lPaTdEY1M4NVYxR3k2MlVoWEdTZXJiSThiY0FvN29OZjNfd0haVWlabFZWZFEyb0hrbElVTjlMaDYxNmU3YkgtNTRRX2dtS1MyU1BMVWFnNk5NQjZHUHRVdVpPaXgxVnJpeGhJTGJ1Q3R0akJmemRkeVE1TGN0WDR1OVN5c0NPR1lYUGw2UXUtdklpVnQyQWZESnpQRnJaSFE3X1g3MXJqdlk2elBzYTdtdDl3eWJiWWZSWXBUSy1FQnJwWXpCQnJTMjc0bmlZOHNzX0FPVnpUTzJFVkU2NlF4WmVTaDh0M1lPcjJsaFlPMXVsX2FzWVVBV19ZdDZseW9CSkFlZ3FPXzYtQjRRYjdiVV9IQUI3c2xhTWIxdFhoWmRfY3FkcWs0MHJYc1VwRkg1bndXTHlyejM1cHV0Q3Q5Q3RQVmN0ZV90d2VzQjJNdWhQdHpYbHZZa3AtSTU2Z2R1ekI4ZmNEWnBiSnI2RXQ5QVU5bjFRT3pKQWJHdWNmYkRMRXA4d1BQR05RQ0pxNzMtSWdvOTNuSllYVmNZOUZYVXl6SlhUclpoNkE1b2ZSTDluNWFoUjVKMURraUdIa3J1SFAycV8tOTJMVVlyemd6RmdTeElGT3hrQ0tFSUpzaWNCYlNaLWVBbG14X0NPTTNmbHZvX1hScUU0VE5WQnNzcXhCUjV0TFprTmZKTGRyaUt3RlJ2WXVHc1l4Skw0NnhZbk5QZXUwQTZrYURKRmI2ZVhtY0hyZlg3eEJETENjMERRRUlYOUJ5MDBrSGV1YllVM3YzLXo3ZFNOeGRHalZFbkRrMFlIRzFzTjFRZkhBWERtVkk2cHVSeFh5VGNBdmZWZ0NyMEhJN0cwTmcybWJ6ZXVVZkZUMXdmamxGWWdXVlhNTmJIbEVNRFBQNENoODZJZHljb0JVRmlCRUpabkFRQkRwVHljblpzOHVvYmwzM09tcGhic2RSSDh2WmNXcXlINlVoZ3FSTU5od2s2NFRpU3pKVTZORjlWV2c1RTBZTEpWaVMzbXJ3VHhFckI3QWY2cnJTU1IwQjZxdXlmUGNwQVhseGxYNWRTX1ZnSDcyemx3RDlPenJqcWR1ZEtQSFNpakM0ckRad01zNVUyRTNSYk1sWlJYUV9Hbnc1WUx0XzdEWlNWY2k3X3pfNFRxU09LdGtXemRoVk9rZ29jNk1sNXBVQmdFNzg3T043blZqMkxXb1dFanpDcmp3SlZaajNaLUtrc0dYczRtZk9wcC16NVpIMUd4ZWg5RFVHTGl2ZElXNktJN29GdlBhb1gxQ18xTXJDQUhiZFFWaS1vc3NFV1psS0VhVHVYWFBnVTRLaENicUh0OVNoa1c4Rmx2TWF4WDV5Y1BISklsNm8zbENfNW1NTVlXVmVzZEFjaWkyRXFqRGJEZXV2NVVJSUgyeS01QmpYY3pZd3IzTGZic0tta2tOUHVKMkdrV2FFTkhrdThSN1V0cTZnN3lwOGhjX1ZNNTk5cDI1Z1BPQjExQnpjd1lobkVScTU5QVBXZ3J3ZGtWaDdDNk1keko5WlpVZmNndnVBcXF5SjJQQ0ZPS3diMm5RSEtRbGZYQXBDYm9jOEFBYlIybUhnaWo3YnZxNGRNZ0QwZWtXME5VUE5EZmQwZTVnN3ZtSzBtLTZrT09fU2RVVGZSNkZsSkdlcmxPYXJQWGRfVVpFQ1dqa1pjX3pESTlTX2xpQnJ6OXpIeExQQ0x6RDVPRXMtQ2ppOVhZbWFpOFpKM2J5aGUteW4zTWV3MHFuSnV1UTR6ZGxYVi1Md3Y1UDdvdk5OWGMwX0d1cjBvQ2JTZW1rcDZFbW1tUVRRQkJ0RWsybnYzY2JHWWNXbTYwOXJIWmFkU0I5WHh0djBMdmI1ZjR1QzQzQXg2ajJYaEIwNkdBUDR1LXlCd2FZUmZqRDJCbk5YaGZTbFE0VU9DMGEzQkQzcTQ4NEktYVVLckRUSnNVZ19zN2Uxdmdod3A1bE00SURfUW1xZkZYYjNqTTB2OF90TXVUOTFZcXRkenE5cmJ2bm51LXdhbVk2NW5uVlJUX21CYXFKc0JOWFRhbDZrYXAwdW9iaTZYNlUwbm9UbXdUMjVtVTdUT3ZWNEQwUnNMWTkzWHdhTmgySmhMdTFZaHdPbTFHVmx1VG5sSEl1T2F3eE15djB5eE9KT3FVZ2dlWnA3OGNlN19hYUhSbFdBOTd1TUJEQ2d4UVpJcVk5eTEzekRJSmItSEZJY0htZlVrN2tubE1lY3NSbElXaGRRSWgtRmgtN1Z5UkNwRklyZVczZHV2V1NIbHJDLTBfQnM5RXFrdHF6QXo3QnlQWUFEeDJ3eFRQdXdsTC13RjRacDRZWVRaWkk2V1ktWE1WamNfVVF4RUEuOHItS2VaZ3ZOa1MtVGpnNEJTYjdIQQ==","password":null,"hsmProviderId":0},{"id":9,"alias":"pingaccess-console","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uZklOUTdBY3VMSkVVbEtHaFp5MzFwdy43cWdMMEUzeG94dmFVeEpqcFg2VzZicXEzMFdJcWVLel9VdDhoYzJHbDRrejAwWEYwak00VXRrOC1fcXBnaGVlb0luNXlqVkV5ei1HTHpxd3ZJdEdPVWlXNklwRGpQMmx6UmZGaXJhdzNnbDNxUWZnRTRsRUt6aDdoSEI5R0ROVVItVktXQ0lONm5FQmdSVWxQWVRSaTFNZDNBNlptTnM0OUtPTWJZMlhON0xIV3NEMUVZeU5ackpncTZBRzc0eWdFZWxHbW1GNGpqM2JXSlhSWmt4SzRBaU9ocTFVVF9kQmJXeC1RQXZ0V29odXlrQmtvamNGak9GN1ZuT2V0YXFDMl9nS3V4X19fWm1oYXg1MXJscTM1SnNzZUdoaTRoWVBWdlpCR1BEU21xQV94MjB3VS0wZ0FEX01hYkxIR2h3cFJMZVltTlJPMHZtUTF5RXVpNTBKdWxIT283eUxqdEgzWFhjRHQtTC1zdENQOW1sbm5pWGdXZzZ5YzhBNm9ncmlPVWJvZjVSNHRvTTBGLVZsZlhzcklDaUd0cFpYVG1OMlRrMGRsWmlURWVXR1BMdmMzald4bDhrU0tRVzJodnFzakpTYWJMMHNXczJHUGNwaDc3cWRidmRENDZMeHpmUUNmMnNtTGJ0U1BFLWFsNXYyb3AzeGRDYVg2NlAtcWZTcmJseTFLRUUyRVhZOG1TMS1xSUJZTUxrSnRuZTNfeGZUb21uNnBnSXJibmhVYlRGUkVtSzBTUDQ4d1JKRmotY0VFYnlRbVl3NU5qMGszdThQNTdaNnhMU0tpbFdXQUNPcXFkNkkwWm5KSW1MWjY0N2Y1ZU1ESjV4X1I1YjdFM2NMRllvNHMwdUdjVzdGS3VDYW1YaGJjeWlQQjktbWFmWXpjWGdldmFDdXhycFZ4MTZiWG9wZzItQllxSlQ2NEZTVVFpeXRoUVRWSGRRUEdNRWZLUjMwQnM3bDh6c2FvMXQ2YTl3MXp5aE5KTWdsTEh5YVNQT0pmVzI2SGIxRk9leGFfZU9YZHIweUs0S3pOUElsYWgzNGZ6NEtKa19JZXpuMXJ1WWdYTS1uSExMX05XU0VnSUcxdUpUcjNTa0RYMFZpbVE5YTNRVDN0YTctbFpFbWxqc1Vra25PV1FJTDQ3RHpiWWk5Um9TVERUeVA3LXM4eURQQzRZTHd5cWdzV1o5OEp0WVJkOXE0VnY0QVhocW1zSjVNR3hDVko4X1Z0TkRNOGZfVzkwYy1OUVVSbFVoZEhFc1N2UW5uT1dtcklBTjVIb21DbFY3aThibXlGRTRLN1UteDd0VDViQVNoXzYzcU9WN2dQTWpucnRuM1Vkc0psRm0yakhDODZnS0hHeVpBZXdDZ1JSaTdVSWJDYURoMGt6elUwNWFhc1N3RFYwcXQzX3Z2SDNQM0hwMnlTbjdfdllOY3N5cktRazlYblJVZE00ZGpIOHYwZHpTVGlrel9BclFtY3FVbEptMFQxZWd1Z2dLeFZ6VmJhSHVZRlpFM3JHOExKcnphdnpXVHpNa1M1Y0hCRXBRVTlSTXdlMWpXbW1FV3RxY0M1V240TlBCWmFZbF9qWllid05vRnNzbW1hVUE4aWphbmQ0UnZhTVl5VGUtUlBTdjN1N3E5RGQwdDA0ZERIMWxodlhTcHo5R2NoYjBOWE9tVzVreGI4Y2wwR2M2Y0F1OWVNbmRVano4dTZzQTVoNFVsOVAtRWJNeEZ1czhJZzdUNVhKMGNwYVIxMXZUX3g5VVRBNVlLMUZIYkp6U0hmX1VUR1dJUkN1OU1Oejg3RU45QkhqU0J3YUNQRnZBeWpCaGNLaVlGVkFaX3A0dnZySWZvOXdIeUdpRktjdG11cnJmWGVPQmpRTmVqc00xVmFCLXNTQmtjOEpnRmNEWVBMZ1VkbEtReVIzVWpLYkRBUk1ESHAxbHk5LTgwVHJTdWFxd2pjdjFEdDMxQU1ORWFBMmNhWElQdjlnV1I0X1c0eUY2RHgyMy1Wc1JZUG4ya29pMk9SaEp5MXFvM0tweXZtcWIzWGdlbVljNmJNSE1UTUdYZmtWak1na3NWMmJlV3FpWUtNVHBVVFJwMEZ1eXE3TERHTjljSW5UcVNxSkxOQVdZZmFvYjlmMFRKSkM3ekRlRXgxWV94YkVhWXplUWZqZk1JN2RxRnFKNkRXTnhIUU9UdldfNm5vaExjQjBOdU5ldVgyRWRCbkxiX3R4Y3gyT3p5b3Y2dl90MDNvVWxiMkdWV1A5bjVMS3pGdVB0Nmt1NC1lLWtSM1ItVWpCVm1LVkQta1hJN2NpSzBBOXZTb29IYWtfQ0lvLUlXM1BVYkhDSGtmcGtaY2tod2gzWk1IdktlaTFHbnNYakpsa0RYS2phaGMxbkZtVFNaVEtZQ0pJUUc5OWpRZWJvcEphZlYzVHdBMnRnVDBpWW5HTE40MnRRTVlLRWVJVG1ZYmwxVnN0bDBfQjFld2VId2tmRm5VVWRLOUhZTDBzY1Vic0w3TmkwRXR0aUlzbzJORks4SzFlUkluNFd4ZWtzWWlXNHJ5UE9VSm1UcXBGWjFwNnpzb2Z4Uk5ZWW10YnV2aW05WGRDNGR0OHRPbVVFWUpWVERQbjF6bVFqLXJqb25uSi1ySldPLXMxRW1RbDJTckF3alJod3MzazdLUW5sLWMzWnZzSjlkVDEtbE5JSjU2bzgyZHJYV0R5NjZXQVFBbTY2QnVpdzVfUVlneTAxcE5jWGtXRUh5cFk2c2xKTmIxdnBNcFBFdjlucThkbVdKQjU0eWE0SnktVFpsZjNFcXl3QUFzNmF3dTV5Y3pUbXVwUkdQRGthaVc2b25BcTBrOHRzUE1jLUtJOHJ1QnJscENLNWpyYWNtMTh3SS1sMmFHV2QyUUlnUThaRU45OExfcVdTNTcwOV9pSERmOFhyNy03SjFqVW9MZVRabjFKVWtxcEh1SGY1N0RMN1FGNDY3cE02UThOdmpMV0RSRklhU3ZlQ0hYUkt3WTN3UXVtc0ZtMXhHTzI3RW5GSmNBLUV6NDNmOUp0b3o4d2NiMnRfUnQ3LU45NDN3d2g0OGhtS2FucFBGT0NLaDZTYWk3dm1PYkRjNU8tSnk5X2tMRDd6eWdwNTh1Mm5iNk5hUFBVMkk2RGFPcWdaMW52N1U1Qlo4Umwyc3dTenVyTXZGQUkybU8zRk5pZlZsX1FKbk16WmlwTDk1dnlkczVWV2FVVDlkWnhzTWgxVjdSS3FOS0lqeXI2bXk3bmxsbmhhNFhJUkVFSzhQb2loTnhnUlRmY0dRdEZFejNkekJuODRUSm52d2hBWFdrRzc4SHRnRWpFZ0xWQUVGTUpGX3YtaGNNbzNxWVZQWUdnOUZEQ29BcGhyTzRNLUVHOE9PVXBYbWJ6QjFsZE5qOWY4MGF2VWpkQndyYm5qdjBLU1ZlVWZVWHVnVWtPbWJyckh3U3kyUnZ1LU5SRTY2TGFYRFFjcl9PMWpuR05BSTNZcXNKUi1CMEczNTlaSlR3VU9XYVV3WF81Zjg4VUc0SElDM2xrLXkwWTRLQWN6YWxLVWk0ZXVSLWRFc3ZvaHlfMVlUWVhHMHlnZTIxNUxtR0xPbHBRX1E3X1lDWW9idjNlTTlDdjJ1aWZtZm05QUo0RkFfTC1nVUVoVVBGcHlVZGVhZnRIc2llTlZrQW9qU3N5V2thYXlhekxPQ1RCVnBkaE9fWEN0X1gzbGF4djFtUU41SnRnekUzN2R3T3BBZG5IdTlDU2FwVjVqWE0ybDBRUER0RXdsWmFPSXNHWVRXQjlzZUlkMkpXWkVta0ZRQjJzbDJLLVpCeWtlZUx6ME1rWndfN0xOckR3T0wwOERNZHl3RTlDMzZnTDZQTy1ReHpZXzJTbGowQzB4R2lPVEcyZWE1RExTalM4TG43bS1sLWg4Mm1kdHVia1VFckNaRlN4UDNjaDBEV1l0ZmZNOVRrZElpM3BFQndfekhBQ3NrNlptUVdTcmZseUNoMlpxS3FWXzhfR1M5bXBUN3dpVEV2ZUZTVndiMDFKRU50TVBuYWM4SC1iLWdmc1hYSFl5UE0zYTRjUXZyRGo4LUUtSi0wQ3NoSHkxQk8xaGVicDcyeWZyNEtwbGlxRHZsbHZBVUZFRFQyeWhnYmUtZ0FNN2MtZlc1UzNyekVKRTZSR1ZnOEVFd1diMW1DYXBEX0ZlTU0ySFhDSnpLaXNNdW5MTTFDUDYzenMxemcxdDlQNXEwNGQzMU1FSlNidkl5dm5PWmZPc3hQeVA5VXR2MG1YT05UTlp3cmlSaWxjNVhmM1RGbmlYdDFWd0V4ZzZBZWU4ZXRGTTJ5c18tejN5ZTY3dDBsVmREUXd6RDJQTzAtS2FPLW9rNmNHa1ZRdkt4VFM4OUNYU1NWeXZ1VlJmS1pVOVdNd1ZEMllYclhtMV9QZDNmSWNxN2N1OTQ5S3VJMC1DcWtHaVRQR3E1YmFzRThWajg2RUNqeE45U3IwVHp5cWgtLWFzcXJ2T0NodmE1d1F6THh6bDRsWExzU1R1ekhqOVh3WnU3Rm1zamNZeS0tQVk1b0dIdEowT3FCdWFNb21URzRUMGN5aTJ3TGlRUGVuenNrUV82c3o3VHg5ZFlVblBPMWdDSmtHZkticEFKZGpVN29GZlpicnEzTXdDM3pUOWRSZGtFU0xXdWd2Q3pUTE1Md3BiM0pvc05HN3VCakV6WVlJU3ZqYS04ZjlzblBRakNNRy1CSlZWMHBlcTEyaEVuakJZUU5hdVVXMjN4d2lDTl9pbzFTNXBfWWZFRVJybkY1bWRLYlM4Ykl1cmNneDVQT0Nrcmc2WHhESkkyRnlzNTlZOVMxYzN1UkdJcll5RzFkNmtKX3dKTGVHSWFnY0w2TnRSdFVCWjdFYzdKVzdZUXF3LlV0bEFDeVhfSFBHMkFwZEZVY2lkOVE=","password":null,"hsmProviderId":0},{"id":10,"alias":"ca-keypair-22948","fileData":"","password":null,"hsmProviderId":0}],"loadBalancingStrategies":[{"className":"com.pingidentity.pa.ha.lb.roundrobin.CookieBasedRoundRobinPlugin","id":2,"name":"Default Round Robin Strategy","configuration":{"stickySessionEnabled":false,"cookieName":"PA_S"}}],"oauthKeyMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"signingAlgorithm":null},"pingFederate":{"targets":["pingfederate:9031"],"skipHostnameVerification":true,"expectedHostname":"","backChannelBasePath":null,"backChannelSecure":true,"useSlo":false,"basePath":null,"host":"sso.data-holder.local","port":443,"secure":true,"trustedCertificateGroupId":4,"useProxy":false,"auditLevel":"OFF"},"pingFederateOAuth":{"clientCredentials":{"clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..yOaPWs8WYbcpQCNgMST5MA.gpa4r42mRUfK5xat4gPrMQ.5BRnjgAdtCviTeU3SCXxsQ"},"keyPairId":0,"credentialsType":"SECRET"},"cacheTokens":false,"tokenTimeToLiveSeconds":-1,"subjectAttributeName":"sub","sendAudience":false,"useTokenIntrospection":true,"accessValidatorId":1,"name":"PingFederate","clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..yOaPWs8WYbcpQCNgMST5MA.gpa4r42mRUfK5xat4gPrMQ.5BRnjgAdtCviTeU3SCXxsQ"}},"rejectionHandlers":[{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":1,"name":"Default Web Rejection Handler","configuration":{"responseCode":403,"templateFile":"policy.error.page.template.html","contentType":"HTML"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":2,"name":"Default API Rejection Handler","configuration":{"responseCode":403,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":3,"name":"Default Rate Limiting Rejection Handler","configuration":{"responseCode":429,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":4,"name":"AccessDenied-InvalidHoK","configuration":{"responseCode":403,"templateFile":"oauth.error.invalidhok.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":5,"name":"AccessDenied-RequireMTLS","configuration":{"responseCode":400,"templateFile":"oauth.error.mtls.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":6,"name":"Introspect-EnforceFail","configuration":{"responseCode":200,"templateFile":"introspect.fail.json","contentType":"JSON"}}],"reservedApplication":{"contextRoot":"/pa"},"resources":[{"id":1,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":1},{"id":4,"name":"DCR Create Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":8}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":5,"name":"Revocation Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/revoke_token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/revoke_token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":6,"name":"Introspection Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/introspect.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/introspect.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6},{"type":"Rule","id":5}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":7,"name":"UserInfo Service","methods":["*"],"pathPatterns":[{"pattern":"/idp/userinfo.openid","type":"WILDCARD"}],"pathPrefixes":["/idp/userinfo.openid"],"auditLevel":"ON","anonymous":false,"enabled":false,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":8,"name":"Token Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":1},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":10,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":5},{"id":11,"name":"Well Known EndPoint","methods":["*"],"pathPatterns":[{"pattern":"/.well-known/openid-configuration","type":"WILDCARD"}],"pathPrefixes":["/.well-known/openid-configuration"],"auditLevel":"ON","anonymous":false,"enabled":false,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":12,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":6},{"id":13,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":7},{"id":14,"name":"DCR Management Endpoints","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2/*","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":15,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":8},{"id":16,"name":"PAR Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/par.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/par.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":17,"name":"Authorization Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/authorization.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/authorization.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":7}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":18,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":9}],"rules":[{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":1,"name":"MTLS-HoK--SendThumbprint","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\n\ndef HEADER_CERTIFICATETHUMBPRINT = \"X-CertificateThumbprint\";\n\nexc?.request?.header?.removeFields(HEADER_CERTIFICATETHUMBPRINT);\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  exc?.request?.header?.add(HEADER_CERTIFICATETHUMBPRINT, getThumbprint(certChain));\n}\n\npass();\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":2,"name":"MTLS-HoK-VerifyAccessToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"4","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\nimport java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef authHeader = exc?.request?.header?.getValues(\"Authorization\");\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  if(authHeader && authHeader?.size() == 1)\n  {\n    def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n\n    if(validateThumbprint(token, certChain))\n      pass();\n    else\n      fail();\n  }\n  else\n    fail();\n}\nelse\n\tpass();\n\nboolean validateThumbprint(def token, def certList)\n{\n  if(token != null && token.startsWith(\"Bearer \"))\n  {\n    def accessToken = token.replace(\"Bearer \", \"\");\n    def cnfValue = getAccessTokenClaim(accessToken, \"cnf.x5t#S256\");\n    \n    if(cnfValue == null || cnfValue.equals(\"\"))\n    \treturn true;\n    \t\n\tdef expectedThumbprint = getThumbprint(certList);\n    \n    if(expectedThumbprint != null && cnfValue.equals(expectedThumbprint))\n      return true;\n    else\n      return false;\n  }\n  \n  return true;\n}\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":3,"name":"MTLS-RequireClientAuth","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def CDR_CLIENTID_PREFIX = \"dcr-\";\n\n  def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n  def isPass = true;\n\n  def clientId = null;\n  \n  if(token)\n  \tclientId = getAccessTokenClaim(token, \"client_id\");\n\n  if(clientId == null)\n  {\n    def clientAssertion = getRequestParameter(exc?.request, \"client_assertion\");\n    if(clientAssertion != null)\n    \tclientId = getAccessTokenClaim(clientAssertion, \"sub\");\n  }\n\n  if(clientId == null)\n    clientId = getRequestParameter(exc?.request, \"client_id\");\n  \n  if(clientId == null)\n    clientId = \"\";\n\n  if(clientId.startsWith(CDR_CLIENTID_PREFIX))\n  {\n    def certChain = exc?.sslData?.clientCertificateChain;\n    if(!certChain || certChain.isEmpty())\n    isPass = false;\n  }\n\n  if(isPass)\n  pass();\n  else\n    fail();\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def postParams = request?.getPostParams();\n  if(postParams == null)\n    return null;\n  \n  if(!postParams.containsKey(paramName))\n    return null;\n  \n  return postParams.get(paramName)[0];\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    if(accessTokenSplit.length != 3)\n      return null;\n  \n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.cors.CrossOriginRequestPolicyInterceptor","id":4,"name":"CORS - Allow All","supportedDestinations":["Site","Agent"],"configuration":{"allowedOrigins":["*"],"allowCredentials":false,"allowedReqHeaders":["Authorization","Content-Type","Accept"],"exposedRespHeaders":[],"overriddenReqMethods":null,"cacheMaxAge":600}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":5,"name":"PingFederate-RestrictIntrospectRefreshToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"6","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"def request = exc?.request;\n\nif(\"post\".equalsIgnoreCase(request?.method?.methodName))\n{\n  def postParams = request?.getPostParams();\n  \n  if(postParams.containsKey(\"token\"))\n  {\n    def tokenValues = postParams?.get(\"token\");\n    \n    if(tokenValues.length != 1)\n    \tfail();\n    else\n    {\n      def tokenValue = tokenValues[0];\n\n      //assuming access token is a JWT\n      if(tokenValue.indexOf(\".\") > 0)\n        fail();\n      else\n      {\n        if(!postParams.containsKey(\"token_type_hint\"))\n        {\n          def bodyStr = new String(request?.body?.content);\n          bodyStr = bodyStr + \"&token_type_hint=refresh_token\";\n          request?.setBodyContent(bodyStr.getBytes());\n          pass();\n        }\n        pass();\n      }\n    }\n  }\n  else\n    anything();\n}\nelse\n  anything();"}},{"className":"com.pingidentity.pa.cdr.CDRRefreshTokenProcessor","id":6,"name":"CDR AU - Refresh Token Processor","supportedDestinations":["Site","Agent"],"configuration":{"issuer":"anybank","encryptionJWK":"{\"kty\":\"oct\",\"k\":\"Fdh9u8rINxfivbrianbbVT1u232VQBZYKx1HGAGPt2I\"}","retainAttributeList":["cdr_arrangement_id"],"tokenEndpoint":"/as/token.oauth2","introspectionEndpoint":"/as/introspect.oauth2","revocationEndpoint":"/as/revoke_token.oauth2"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":7,"name":"FAPI Conformance - Fix PKCE","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\n\nif(!exc?.response && getRequestParameter(exc?.request, \"request\") != null)\n{\n  def requestJwt = getRequestParameter(exc?.request, \"request\");\n  \n  copyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge\");\n  copyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge_method\");\n  \n}\n\nanything();\n\nvoid copyRequestObjectParameters(def request, def requestJwt, def paramName)\n{\n  def delimiter = '?';\n  if(request?.uri.contains('?'))\n  \tdelimiter = '&';\n  \n  if(getJwtTokenClaim(requestJwt, paramName) != null)\n  {\n    def newUri = request?.uri.replaceAll(paramName + \"=\", paramName + \"_old=\");    \n    request?.setUri(newUri + delimiter + paramName + \"=\" + getJwtTokenClaim(requestJwt, paramName));\n  }\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def paramValue = getQueryParameter(request, paramName);\n  \n  if(!paramValue)\n  \tparamValue = getPostParameter(request, paramName);\n  \n  return paramValue;\n}\n\nString getQueryParameter(def request, def paramName)\n{\n  def params = request?.getQueryStringParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getPostParameter(def request, def paramName)\n{\n  def params = request?.getQueryStringParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getJwtTokenClaim(String jwt, String claim)\n{\n    def jwtSplit = jwt.split(\"\\\\.\");\n    if(jwtSplit.length != 3)\n      return null;\n  \n    def jwtBodyEncoded = jwtSplit[1];\n    def jwtBody = new String(Base64.getDecoder().decode(jwtBodyEncoded));\n  \n    return getClaimValue(jwtBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":8,"name":"MTLS-RequireClientAuthAlways","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def certChain = exc?.sslData?.clientCertificateChain;\n  if(!certChain || certChain.isEmpty())\n    fail();\n  else\n    pass();\n}\n"}}],"sites":[{"id":1,"name":"pingfederate","targets":["pingfederate:9031"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":4,"name":"Deepthought Product Admin Service Site","targets":["deepthought-admin-service:8080"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":5,"name":"Deepthought Product Service","targets":["deepthought-product-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":6,"name":"Deepthought Banking API","targets":["deepthought-bank-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":7,"name":"cdr-register","targets":["cdrregister:8084"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":true,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":8,"name":"pingdirectory","targets":["pingdirectory:443"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false}],"tokenProvider":{"useThirdParty":false,"type":"PingFederate"},"trustedCertGroups":[{"id":3,"name":"MTLS Certificate Group","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[17]},{"id":4,"name":"PingFederate-Trust","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[3]}],"trustedCerts":[{"id":3,"alias":"pingfederate-service","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lHQVc2MU51NDFNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1Hd3hDekFKQmdOVkJBWVRBbFZUTVFzd0NRWUQNClZRUUlFd0pEVHpFUE1BMEdBMVVFQnhNR1JHVnVkbVZ5TVJVd0V3WURWUVFLRXd4UWFXNW5TV1JsYm5ScGRIa3hGREFTQmdOVkJBc1QNCkMwUmxkbVZzYjNCdFpXNTBNUkl3RUFZRFZRUURFd2xzYjJOaGJHaHZjM1F3SGhjTk1Ua3hNVEk1TURNek1UUTJXaGNOTWpreE1USTUNCk1ETXpNVFEyV2pCc01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQk1DUTA4eER6QU5CZ05WQkFjVEJrUmxiblpsY2pFVk1CTUcNCkExVUVDaE1NVUdsdVowbGtaVzUwYVhSNU1SUXdFZ1lEVlFRTEV3dEVaWFpsYkc5d2JXVnVkREVTTUJBR0ExVUVBeE1KYkc5allXeG8NCmIzTjBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWx5dVV4YWR3MFltSnc4U0QyS0NyakI3aVB6bncNCnNxVkxGOFBNNHhhL0xCUVNFUmVxZFZZaGpIeGFLU2t2RXZyVmJCd1ZEbnpZTjM4QVFDNlRaOWhIaHp3eXpTc2hqSUlmd0hzcm5TQWsNCjI3V2RMY2RGNDZtZFdRZCtzWkhnRzd5MHZmZVJ6Tm9sUy8xcFlDYTlkcDc0MGJrKy82dW5DcG9jc3VFL2dvdGZqQjF0cThPL1A3VmQNCkRTQ3ZzdHRXU3lyK290N1FUNUJWdlZONWt1dDcvL2ZiREdpM2VtMDBzUXdzNnRLNE5rTkxXY0NaYXNEL1E1N2tWcnp2UmFjT1M2aUcNCitzcFFPcVhuWnVoNlVaZDgxbTFSUHFBVE9qdW0yUklNSXdEWmZTR29Yd1ZUY0RGVG1tTDBGTDFFK2d2NU5ka09SdXhVdkJ6aWlHZGENCkJRcUR0ZGFpR1FJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ0c295OXBVZ1JrZDd2OEEyelQ1Tmc3bFFDVlQ2bHprWEINCk10UGtFRkd6VHNkaDdvYWMwYU9qaFZvM0FiSXBiVE0yYTMxVWNEc1NkZlNNZjVNdi9ZM1ovaUQ4d1c5czBTeXhQUFhZdVhCSWgwVTMNCk1CM25GK1hsc1ZkS1g0eS8zQVVUZGdnek9CTGV2THBSNjhwa1pOcjYxR1UzNllOWHRCUzhxQW1sZHVyTXN4U2J1VllrZWdQU2d5RmwNCnNqWWpTYnM2b3M5WFpuOEFwL09jWkxmU3lGM1JtaXo2K1R3aHlleVFPKzMrMitiaDVOamtaZ0JHUW5CbDh6SVZZNEhPQjdPVGpnVEcNCnI1cTNvOW5xMzhwTjFtZ0pnV3dQS2JDeWxiWlczR0hHMVdKRXVxWG8yMG8zOGg1Qk1EaUJLeENxNTF3NjREakQyOUZqZzA5U1pmU1ENCm03OE0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ=="},{"id":17,"alias":"cdr_trustcert_default","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZmRENDQTJTZ0F3SUJBZ0lKQU5INjA1UkhEYW5yTUEwR0NTcUdTSWIzRFFFQkN3VUFNSE14Q3pBSkJnTlZCQVlUQWtGVk1Rd3cNCkNnWURWUVFJRXdOV1NVTXhFakFRQmdOVkJBY1RDVTFsYkdKdmRYSnVaVEVOTUFzR0ExVUVDaE1FUVZCQlF6RVdNQlFHQTFVRUN4TU4NClVHbHVaeUJKWkdWdWRHbDBlVEViTUJrR0ExVUVBeE1TWTJSeUxYSmxaMmx6ZEdWeUxteHZZMkZzTUI0WERUSXdNRGd3TkRJek5EZzENCk0xb1hEVE13TURnd01qSXpORGcxTTFvd2N6RUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQWdUQTFaSlF6RVNNQkFHQTFVRUJ4TUoNClRXVnNZbTkxY201bE1RMHdDd1lEVlFRS0V3UkJVRUZETVJZd0ZBWURWUVFMRXcxUWFXNW5JRWxrWlc1MGFYUjVNUnN3R1FZRFZRUUQNCkV4SmpaSEl0Y21WbmFYTjBaWEl1Ykc5allXd3dnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDcEpPTmwNCkRzeHVSbUJaY0FUR1RpUnFqa1JqV0xOa3psTTluamZjU3ZJSTBJNWhXemtDOEF5dEx4WHRYQnEyOEpSSzdRbXRHK0J0MEpqdFZ4bjMNClgyUWc2T3B1d2tidXlUVUw0RHMxNElSRFNPLzFrVW5xem9Uck1uUkJ1VmdiWVBHc3JYWnM0Qys5MkNZekhxVVozL0ExSC9xSkxhK2kNCmd6SkZYcmVWMGxEcHlhdWNEMnZubFo1U2FtV1JVRnNnSjZneFhzSjhlY1BoNTFNOHJvRFQ4cXhMRnBrYVVEVmYzL0xmcUIzYmZzUFgNClZUTzBqR3JBbGF5eFhMRjQzMzFuRjh0RlpCLzNBdEJDK0lrQUZnWVZEMTBxU2o5SjV4M2x3UzcxQXV3ZlFLd3ptODdhWk9uWDU3RUsNCmdaakxlcm1BV0NaTzBNOGRlZGJaSlN6NWs1U1Rja2tKWUcyaUtwbFZKdFVEMStmVVpGOHBqeDRxSGZuUFozVWhlUzNNV05SdjJPaVYNCm56RWFkZE01eUEyNkowb043WlEvR2JyZnlYelk5R2dZcUY1eUZQR0o5dTNhR3g2SlZTSWFjNDcrUnhtMEhnaEJJRm16a0JLTVVxelUNCjRwMGE2bWYvWlNTdVJweHIrZlRQUHNxa3B4anRJZkIyWXRIZHZ2Z2c0QUMyMTFHQUo0Q3Rjb0RyTGlGMjloRTQyWW9lbGRLcDB3REUNCjNoYUs2YitBODhnalhDRjRWQWRGb2c1MTFCWURXSGwxSm1SRVo1SDJLdHIzQTFuRXgxQk9SRzhvZWFxS0xxVGJ0WkcvTTlhYXZIZzYNCklhdlY0Q0M0MG5qSFFWWUpCL1hUSVNNdmZ0dG9wUldsc29tQkJIRmhTZjNuRmcrVWM1eDUrd1g3UktxUGo3RUM1SWJWNndJREFRQUINCm94TXdFVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUI5N0FTWmwwYkxudXpsR2o4dFBtRnkNCm1RZFdGSmovUS9MWlNIa2t5UVg4TCtUZndYU0ZTVjdDMHc3b0ZSY2t1bkkzTFJPQUg2dkJUcnE2V2MxL1pSWlo1SnhYVmwzelhiTksNClVMaCtoMlBUTmM2OUFtOHFwcUZrNTk5dmd2QTljTEM3VUpYK1YxWkFhM2pUNG9xL1hxdEp5ZURXbzVDOUY2K2Y2Z2sraTlGRHIzYkINClQyNWVwanRHN2tzUkRoeEF4T1JLbm9MS1FqTmhVM1U5Y3Q2RjB0VmFpTWtMQzNoejFUSHk1U1pPU294ZitpaUdXcThpOGU4MjRGcTcNCmFIckdMa1A5aUlrTzQzZXlNMk85ZHpqMXIrVEZYSnkwUVVNWFNkbUlrYjVjS1hzL3k2cDBEZFZzSmFxRGdiUnVrNmFCekhvdFU3KzENCk1EelN0ZVJJd25OdFl3MTFaRTNkbndwakhPbTk0eWpjOWFTbHRSR0tDNmo4SFByMEUxWWpzRVBaM2lnYm5PWlVCNzVXblRvTDdNOVoNClA4UjhieXd4UFk5QTlqVnRVb28yZkZaNzRJQlVvUkRUUFdyYzh3SHV3T0tldGszTXhUc0k4S3NobzkxZysvb3loSm9JMkFVR0lwQzMNCnJRZmhBcVJoYzZqSFUyU2xwQmV1aWdCQ3VKa0tQREdKdHRDMEtOK0lJRXNYMTZlSGMzZDZRMGY1RVAxMUpPSjVJNGMwaXpLRy96VXgNCnFvZzBQcG5NbEhMR2xyQU4wd3oyU0J1TWt3ZDVvKzB0aUNLVGs0UCtPdGhpYkcweWhHVDIyY050NHl1ck5rM294Mi9RTThYOGZKbnANCmIxMVVSY3REd1VNb0pDTngySHhLSUJ6QzZoUWpidE1WNVVGcXVpalA1cDQ4bXZkT29KeGZrQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="}],"unknownResources":{"errorStatusCode":403,"errorTemplateFile":"general.error.page.template.html","errorContentType":"HTML","agentDefaultMode":"DENY","agentDefaultCacheTTL":900,"auditLevel":"OFF"},"virtualHosts":[{"id":5,"host":"sso.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":7,"host":"sso-admin.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":10,"host":"api.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":11,"host":"pingaccess","port":3000,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":12,"host":"host.docker.internal","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":13,"host":"mockregister.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":14,"host":"pd.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0}],"webSessionMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccess","signingAlgorithm":"P-256","cookieName":"PA","sessionStateCookieName":"PA_STATE","updateTokenWindowInSeconds":60,"encryptionAlgorithm":"A128CBC-HS256","nonceCookieTimeToLiveInMinutes":5}}}