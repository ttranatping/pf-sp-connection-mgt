{"version":"6.1.0.3","data":{"acmeDefaultServer":{"id":"08eb4cbc-20ed-409b-82c6-12fd0c92eb71","location":"https://localhost:9000/pa-admin-api/v3/acme/servers/08eb4cbc-20ed-409b-82c6-12fd0c92eb71"},"acmeServers":[{"id":"08eb4cbc-20ed-409b-82c6-12fd0c92eb71","name":"Let's Encrypt","url":"https://acme-v02.api.letsencrypt.org/directory","acmeAccounts":[]},{"id":"8572f98e-482e-41c2-8a3d-6a0b2fc99734","name":"Let's Encrypt Staging Environment","url":"https://acme-staging-v02.api.letsencrypt.org/directory","acmeAccounts":[]}],"adminAuthBasic":{"enabled":true},"adminAuthWebSession":{"sessionPollIntervalInSeconds":10,"expirationWarningInMinutes":1,"audience":"PingAccessUI","cookieDomain":null,"cookieType":"Encrypted","idleTimeoutInMinutes":30,"sessionTimeoutInMinutes":240},"adminConfig":{"hostPort":"pingaccess-admin:9090","httpProxyId":0,"httpsProxyId":0},"applications":[{"id":1,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599729853987,"lastModified":1599728953987,"requireHTTPS":true,"name":"PingFederate-Application","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":1,"agentId":0,"virtualHostIds":[5,7,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":5,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599727455769,"lastModified":1599726555769,"requireHTTPS":false,"name":"Deepthought Product Admin Service","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/dio-au","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":4,"agentId":0,"virtualHostIds":[10,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":4}]}},{"id":6,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599728032656,"lastModified":1599727132656,"requireHTTPS":true,"name":"Deepthought Product API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking/products","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":5,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":7,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599728032656,"lastModified":1599727132656,"requireHTTPS":true,"name":"Deepthought Bank API","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"API","spaSupportEnabled":true,"destination":"Site","contextRoot":"/cds-au/v1/banking","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":6,"agentId":0,"virtualHostIds":[10,11,12],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":1,"policy":{"Web":[],"API":[{"type":"Rule","id":3},{"type":"Rule","id":2}]}},{"id":8,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599727455837,"lastModified":1599726555837,"requireHTTPS":true,"name":"CDR Register","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"Web","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":7,"agentId":0,"virtualHostIds":[13],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}},{"id":9,"enabled":true,"agentCacheInvalidatedResponseDuration":900,"agentCacheInvalidatedExpiration":1599727455885,"lastModified":1599726555885,"requireHTTPS":true,"name":"PingDirectory-Web","description":"","manualOrderingEnabled":false,"resourceOrder":[],"applicationType":"API","defaultAuthType":"Web","spaSupportEnabled":false,"destination":"Site","contextRoot":"/","realm":null,"caseSensitivePath":false,"allowEmptyPathSegments":false,"webSessionId":0,"issuer":null,"siteId":8,"agentId":0,"virtualHostIds":[14],"identityMappingIds":{"Web":0,"API":0},"accessValidatorId":0,"policy":{"Web":[],"API":[]}}],"authTokenMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccessAuthToken","signingAlgorithm":"P-256"},"availabilityProfiles":[{"className":"com.pingidentity.pa.ha.availability.ondemand.OnDemandAvailabilityPlugin","id":1,"name":"Default Availability Profile","configuration":{"connectTimeout":10000,"pooledConnectionTimeout":-1,"readTimeout":-1,"maxRetries":2,"retryDelay":250,"failedRetryTimeout":60,"failureHttpStatusCodes":[]}}],"engineListeners":[{"id":2,"name":"Default Engine Listener","port":3000,"secure":true,"trustedCertificateGroupId":0},{"id":3,"name":"HTTP Engine Listener","port":7080,"secure":false,"trustedCertificateGroupId":0}],"globalUnprotectedResources":[{"id":"3a2b5451-00ec-40e3-9556-183452460586","name":"StandardATM JWKS endpoint","wildcardPath":"/ext/oauth/standardATM/jwks","auditLevel":"ON","enabled":true,"description":"JWKS endpoint"}],"httpHostSource":{"headerNameList":["X-Forwarded-Host","Host"],"listValueLocation":"LAST"},"httpIpSource":{"headerNameList":["X-Forwarded-For"],"listValueLocation":"LAST","fallbackToLastHopIp":true},"httpMonitoring":{"auditLevel":"OFF"},"httpProtocolSource":{"headerName":"X-Forwarded-Proto"},"httpsListeners":[{"id":1,"name":"ADMIN","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":2,"name":"ENGINE","keyPairId":10,"useServerCipherSuiteOrder":true,"restartRequired":false},{"id":3,"name":"AGENT","keyPairId":7,"useServerCipherSuiteOrder":true,"restartRequired":true}],"identityMappings":[{"className":"com.pingidentity.pa.identitymappings.HeaderIdentityMapping","id":1,"name":"Default Identity Mapping","configuration":{"attributeHeaderMappings":[{"subject":true,"attributeName":"sub","headerName":"X-SUB"}],"headerClientCertificateMappings":[]}}],"keyPairs":[{"id":5,"alias":"Generated: ADMIN","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uejJ4REE4UDNsVk8tSHNJRU50NHdsQS44aFhLYlJfa2lvRS04OUE1bFJLSEtlWVd3T3NoRHRxRk5qQnJhUnFQNmFhLXp4WXd0VDVYTzRTb3lMUkxTa0tIVFZieHhvZ0xQMEprSjhDelQtamQ3bF93bHhTbjloeThWWU1WdVhBLW0zcEprVXZGeEtSaE1iQk9mTldlTVFIYVJ2MEFkSzVrZGdrd1hpSWFPZ3ZrUzR3azhkRzZaVC1uNEdNODd6bUFrTTRxMEtyNFRkczhyTnA3RHFoR0d5eldqVi01R2hIbE5vMldvQjBGS0lwaERZRFIyY0dkQnlmbXQ3b2JQTWVBYWNmSnB4ZmxNaGg1TExFLXQtdVZOOEFJSUpudDFQdGJrcDNNS3dwNWQ3aUpJenpGelVSdzZiWEZtN2ExNlRrejVYWWVGVm5ibG85TV8yWmRnRHZFbUlYYkNaZ2VJR3BIbmtBTFI3V28xcjdFazNNa3lObWo2M3d1SDZXVExNeU9SX3V5Y1dSLTBlMjJPUmM3WGFKaEthZGtldlllZXBTa3JCdXVkQkNiQ1I1Z2lZaWNyeExoRXRzN0VrRV8yc0VpR09kTG01MERlWW5Lc2gyeTZsUVk1TGZ1QUlzX01ITU5EcVNvQUQ0NEdFWFhWMm1ram5EOHJZX25BQ1kxVWd1bGdZdWJ4T2dvYjJxalRiamVpWG5Kb1U5dmw4Mk05Y3Z1V2lKSFB6b3ZUaE16clZEN0lhNDBvdERLb1gwbW5GTUVkcXdoUHNpMlhnVFY5b3VJcTZfNDYzTzExdXVZMzdjQk5wUjRJbHc0SnFFQTFpTXhBNi04LWU4YXF3ZTA3SDBPd1hUdm9TeWNESWZmSVNMSW0zbkpVbmdDSGJpa05sZUFNTnFFVl9KeHN3ZXhBamlwQTYxTGlteWM5ZHR4Z1UxMEIxcllfQVJfdzFBT3ZTS095cUVPNFBtQWV1cWhQT0Q4X3J5M2Q0YkEzVHI3dDA1RWxMMTlCYklJOXZTTHZnNmE1VmNxQWN5UmtaMlg3UWx0dmp3d3BFa28zbE5hc3VrbmdXd3RxdTVwZ3BfdWtvV3dmblZkV1VqQVFqSFZ5dEx6cmYwNUZ4bmZrM0lfWlhlcjFVb1JHWFZSanFZdE41R09QS2ctcG9LaU1TT2g4RlNNS005ckpud3lfSTNzVjlvYzR5Tkx3Y0FMMndMazkwOGMzMndjdUtFbV83NGpmekZzRG5yUG0yT3RsZ3d2MDRsYVlONVV1MWY5VEZ3S1NWM29GVGRiWGpYOEFtZzREUDA0eTFJSGRTcjN1bHoxQ1VRM0kzMXF6N09xOEJlWS1fS3ZqTzl5SW9uUEt3blJENVVtMWNYaXVIZVVqbzFIUnlUYjk1MXVlLVQtNUs1NEtlMG8xTUdKSXhUb0M5dXJCRlhZc1NRYkJ0TV9scnlRSXJseGpNQ29kNGJZbW85OElpdlJiVzFiZkZ5YkFRUzRsSmVucE1tOUxjVU9sVDVMc3VBOEpSWFhKMWZkbmVXS3BtR2RMT0RNWkJ4MXVVS2JYSEphU2tMbnpDMGVFTWRhWjZYNG5NSi0tMU1nMmttUEZtampyQ1lLLWZORDlRZmZwQlh3eXFGeFM2Z05LTEQwY180WEhTMVJWNEdnenVRcXU2THF0bXRHZ2ZWcEdCZ3ZxVi1XemhVMElNV0FwRWdrTWdJeS15c0FwcEROUURUUDRzU0dPN2ZlbzNZRzNOYWRKQWZzc2FtRFdXb0RxRm5fN0hKLWxjQ1MtbjRFU2NfdXFrQTFWSko5ZXZPXzNURzAwREVuRkpHT3ZOUlFzOFdfR0RCdi1DWjdXdnpnMWVGUHhybVZkMmxjZW5GQ3pVV2I2d1B2NTAydU5OMmExQWZkV1A2UW1qbkJycDlTMWVEcExadktTWnZjZDBheTItQWVicEJoQ0RFOWNrNkxWUWlKWjVTOGstOFY4c09zMGlxWVlDZjhJQm5kV0pUMjBoTXBKOXd0b0VXeTEwZ0x0ank2RHVlYUpmelBONDhyVjlQZ25ieUNVdFVtcTQwc2JqN2N2NGdaUU1DR2dyOVdjTmttUjlnQlBHQzJkYnRCaEtIempUM1pPc09pSFRVMUs3TXdPVEF5Z2R3S01WbnpESldQeDFUTEpZS2dPNlI2WlFKZ3pCamtxb0dVQmx0cTltbFBCNUJ6ZXRVWElTSFhWYUdOdFd3M1dnWjUxMkFKV3Q2RGlxZW1DNzhOTDdSdjNhbV8yWThGVkhwanRFVlNzM0QwaWRFZ3lzcjVzYjNUN3Vxc3JpYTNMa1NiZGU4dkJPUWFQNlBkTlZSVEExb3lnR3c4UW82VURtOTRxZHRaeGxQYmdPZmFhZW16RFRDNDJmSVZoa0t4eU8tSklwQjVOd0YyR0ZnTWJvalY0N3RFb0l6RkFURXBSSmJEVzNNQ2tMZ2t1ZXVOVVFBTVU5SE1kTnYydTlwNTRTeHZwMWZkX1V5c3Rxb08yZFRkZ05ic1lGdXF2OHM2V1ZJV0ZFaUg2dmdMemdkSjhMbGZ3aWF0d2ZhX0FPa2g1YmdjNnRxck02Um40THhveEJYNGMtczJVZHlPSmtuako0cU5vN0lFZlJfZVhJNER4YXhqZnc5b2RNdEpNYXdUbXppbjlueUZMQk1udmdIU2VvaGw0ZUItM0huVzVOWXR0UEQwY0tpU1c0aXNTMEZDdDBCTmdYdlZwWHBkNDQ5cjZyaldEOS1pUW5wUmtSdWk0OEdaSmRqbVhxazRNSnFIakZtdzFzbEUzRmR4aWhCVVo2UHo3OE9FdzVrazlvck5VRmRDVWhPMnJhaVVwTlhJcEEwR1pBVzlpeV9vOElfbGJjRzdOREZkZUsxU2RIMFlmYk9KUkpGSlF3bUVfVmx6VnNmdkxDMEg0b2twcnFldVRXN051Vm42c2pJOW5fV3lvYlBpRlNxOHY1QWw0bWxxX3I3bF9sOU1LV0EzRE9qQV9qQlhRVFhVQm1fVTVxc2hFeVRJU2pjdG5uS0VXcWZ0SnNKS25XQjc2V1RxQVQySG5INUx3ZEtLQThyUXVGUlVKYi01Y01XOUxzMkhtWnBCV1BRV3RNVHVwVHNNVXM1bGpnY1lqTWhnR0N4b0t2Mll5OUxNOGxjWTdIVGVUU3BDdUswMWc2MW5KRHY2UGNvRnFHN3lQanZRY3NyX0pUUUN4R0cwUTVueW9zRVR4am9KTl9RUlA3VkpFcVFXbWNvUjZlYTBCWG0zVWZpVVN6akk5MmEzekc4endycDVPWXEzZFk5MzBKdFh2MlpNZWNWYXVhMDFjN216czdsR3dtdXktYXBXOGpCd1plYlFQSVB3c3JzUUQyOFA1M3UzYlJfS25CMTg2dlREaXpDTWVYQjdpUkxoeUQwTlBGZC03Z05kR2M2R1NXM0g0UUJxNHlhOTJJUHptemFORFJpTUhvdHI4TkJFQnhuSzVJYTZEbDRBOUoxbHNJamZZV1MyNC1TeU9hcldkVWV2TUJDekIzeWFKLThCWXR0WU1tdE5zM1lmNGY1cTlGYjJyaDJBTzBaaUtiSkxaUldnQmF3R01wWk82UTYweUl5cHJVMXBQbEo5eWV4Qi1venpsN0x6TW93TTFQa3lBOHFickE1c1prNVBSdklXS1JNMXVGWjljdDJPV0g1OHF1LVUwc1ZueF95akJXek91Zk52U0lPeUVYTVhraWFZdERuQXhVcWU0eUllR3NLV1FNME40OGNlMlRGTXBPLUNscVJjb25ub1ktcDg2dlBlTDlTOWtDdW5ZRWRTYU5yY20wVFdIWWdKVEtJSFQ4amUtSDNxOUNsdlB2RFQxNDdkNUdOdWtJWkJDWW03WU9UZlM4c1JoX2V0REVUTEhZd3Vaem1wNThRVlI0emZLblZwek1kLVRDTExVdF85bmZBR1puRTdRMDh3NVBLYU92b3NmNTVWYlgybV9JeUZRQmFtY3BiaUxaeXdVM1pvX2V4Ynd0ZnVtYmwxMUczbHdsdGNES3ZvM1U2VWctNlpzOTl4ZUdXUWtsMjV5N2F6SUdjQ0JleE9BR1RzVVNyNWRsZUZ1NlRJREJwZW9vRUN0aW9QNnQ1b2JZMDR2bXRvSmpnVjBjM0I0QkZGSE1WbC0yU3hpZWZXVjNMV3hBNk5NWlgzLTVkRHdOZFpPaWJXQkM4M2xlbVhaN0VtRHB6c0RXZVhhbGpBNXh3TG80VkVoWWt0OWl2OEVadnNqMml2VkVJMWVyeHJVQzAzSkI2WGhyUnZENHJnM3YySnM4ZFg3Q045ZUFxd056aldlRlRZb1FGWU5wUHdsaFBMOWJTRWdOdUdyekJFekFtbmVUaDJqdnV6LWpKUjJWMDYxQ001akN1M21OWFdYc1FIS2ZrX0xYNzNNUjlsUG5DNmVSUVQ4eEhDeEFPV1pCZ0hWM0hvUHFLWnBzMDhWc2RiU0Jhc2Zlcmk4Szk0WDlOd0Jpcl9tamZWTkpzYjJlOUZDNHV1eFJfOUhZY2ZfRW1Bb015ZmVvSzJsQkVBdklnd3pYT24zUU5GamtUWDdqTUppczUwREdibkl6Zm5DeFUtNDc4N0xpQTJsNkhMczNnRGhNdUg0ZUxVaG42M2ZXNy10QWxjU2VFVjgzWktwcng5RmFudTlud2JvRTdraEc3M1NNSGU0VDlTZGpfdkN0cjNfeldBRFdJVlR0MEd1Mk5HZ1VPWkFGdE5KS0JacDl4bWRPNHBOZGo1MWY3WjJuTXgxUVZXZFFRaUhFdVA1MmRZUE9rWjhma2RQOVRsSzA1eHF4WmhUYjZPN1NqeUdYM21WT2NuRy0tRF9DNnVONDNMd0EuNVBfNTZFdlJNVWsxU0tMc0lvSWVyQQ==","password":null,"hsmProviderId":0},{"id":7,"alias":"Generated: AGENT","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uMmxmWlVNWVkxWndDQnY2ZVh4TmlUdy5PQlF1VnVjUnFOb0hhUkhWay1pRkJWMVZYaFhWRHZFd1Zrandyc25Ic1dBY2lEMGExb0dYMEVDenFpWXpoWFlSQUVjZGlYbi1CVlRZb3NNZ3p2bE5OeEgtbVV1c0lvdnBnb0s2YW5tS3lpSkhIT3BXMENNV0J3UXZVVHE5Um5RcG9oT2hJVFVlMVpHWFNzekJ6X0pmeFp1Rm1UaTlqR0RzTHVnV3FGQlpvak5oY3pNSW1ETEdkVkswLXY1aU1Vc3JndXJNWGh5b1V1YzlSNEc2YmkzQUNYWDYzMUhMSVJsZUMwWmVnc3JFanhpSlpTRjdEZWhFVkJkeE1LcGV5SV81R3BhbXQ4cG0yUndzcHdZdHBrMVNGMFdHUkpkbzAtQm1WeTZsVWtleVBkNXRpdlQ3U0JvbVBYY1JXWVdyS3VkRjJ5TkZiVi1KY2ZaUURMX25xWkx4d0xBdmQxSlJZcWFEUU15YWJiMG1CYVM0WEU1RGk4RWZFWjN1bEdubjFwQ3NIVE9jdy1RQ21tY0xpRkQ3eW1CbDlOakVQRGo3WW1TZ0pQc3Z3NFV6NTJ6MlVqY3BJWlQ1V3RNNGNGekIzVDdMYWpHTUQ2QWVqOGtheDNYblBkbEZzemhrbWR6b2FKakhTMmFUMU9BQndLNzhPaVNDQmFiT0FSUTdFbTV1akF1TUJlZHE3WTNBSkZiWE91Y2hTdlhwcFdXZS1LVWlhUEZxWFlEYUFITmYzN1AwMl9Kck5YNE16azF2ZHB3RzJ3Q3FvU1ZsSTN3bTR3dGp6ZDczTkdkbUZFZ0pXSDBnb05weVFXOHNJOTMwaFJ2QW1NQkljWXRzcTRwS09kZXVqbkJUTWtQYm15bldzWVJvbzB2dmdaaGFtMW51eHlBMDlaMk5VM1J3M2c3ZGJ3b2tVWGNWVmE1YmZDTkVOQ05paklDUVF5dWxMT0hVdjBEdU9uVGpxa01DWnNEU1pSNWJiV21qbXdzdjN3V09xcnJTaUZwU2pkMjdhSm1vU2h5a2otUGRxU1d1Q2NJMEtnOUdqeERzMzVLWGZfNU5taS1HOUc1bTd4UjVDSlQzM0hhaDRheTdLaW5mcTNGaFlyNTd4TThWVUFNQmZaUmY0VEVHY05sQ3JoY3dKRF9wTlVmd0huWm1MTEFMbEM4dU9yREpvQUZPNGdwQTF5aFEyX0dwazA1eGYtdzJQYkFadjZFYzg4VFpvdnA5NlpaSVdkb0pEaXJqaUo0WnhpREVqenR4THV1bGtZRUFXeWNQQmwzcGJDcC1LS0JWS0xWVW9haXRCei1tbU82WnRaSEVUZzYzSHlJalVNNzVrRWxUeE1BLVpKN0taVGY2aGpiQTZERGNrZjZFYU1uRWM4dGpOX29VODMwMFRNY1FyMFV1N2c1UFpoSkhqZ0lPZFo5T2hLZUdtQV9vMXlPeWpyVGpMeE4wSWRtamF3b1VmY2lIWHRYb1g3di1lUU00eWdqTmdMN2d6TkI4ZmZoLUM5RXFuZTNscTZIRF9PaWdGN3VvMmlwRkNfMkliYi03Tmo1VTFidlV4Zlpyb2VYM3RGbGg2dUF2YWtZcmFkRFlSRzFmNWFrUzFuTGNmcl9kMVZfak9xX2kwMWJpZ3BaV2xkM0tkc3BOYmtfVlA1bXBpYTlDNWhzbi1OWkJ2cG5oMTVMdGp1UFBQMzNMYU1ZSTZhT21GTW9Lc2VqVkl6Y25ibnN0cFNoQUVPSGJVRHdTSmNyUExPVF8yaDRjbFA0WkZYVkFCaHpDQ1pESFFnMXRCc0xaR3pwYzM5T3FxMW9vSm45ZGF3ZTJ1S2hFdGY1d2N5TTdBOFBOVkc2ek9SeTBOeS14TDdpOWFTZ1MxNUZGUmZWSkFXVkR2VEt0UW16U0RMUE44S09hQkx4WkZLZjNwNE1ackFOck5BRVEtVVg4OW0yWFRBWFhPaUpCSHhyZ0RNRndfUU1VREhwZjROODBNSlVMNVEyNWFZVW9ZMzVaQjc2SnQyTnRIeFh3LWFvUDc1ZF9saDR6UGhaM09CR2J3NGtzYi1UVElydjBYVzlobmxYQjZuZVR5SXNvaElONnIwbk04X1JqdF9NdWZLQWROUHBIUFVBd1cwVDU4X3JzYjdNR1lYQXgwbWY5WTZuVkNtdExPUmRSMzdXUHdXT3R1UjJtblFxQ3paM2c1UllGelJNZ21OUTJNd2RTNXBJY2hSRzRjNEdsRGZFZXEySktRb3JnR2o2b0Qtd3NrUmtqSExSazRxeTEzbm5qVkFqS0hUeEVXSWJYQ01iSTY4SmVYMVpnQ1dTN20zTW5JekduMkwzNC1EbW1nZmN5MFdPZVpnWUxadkliU0lycEo1SFlkRGtnaWNQSHdCT2xueTNUb05RRGF0Vi1URFR0eG51cm00aWtCTUVOcUlOTHZqaGFhVURMV0hXWXhOd19ZN0dyV0trS25nNFlUX0FJcXFvSjl4cm81UG9RdXJkNEFmamZfZnQtUHROaTgzLTRnQnBZVDIxdGY0UHlxNGhzS3VDSm85MXNMa21ncjBBbldIWW1RYXU2M2sxdFNWVG1wOTNJNlZKY3RzbXpUZTJSb19BMjcyWC15SWJ1d1ZsMS1lZlozLUplWXBaekN4S3pVNFZ0ZG1COWZ5Z1FoZlduUXc5ejFpbVN5VmZjY3Z3aGF5OGRFbUVRNGJpb200d2cwQVBrNmZ3alpfVnNydXJHcUwzZUYyaWxKREFVcTVrdm9aa04zYTN6SWtXc3dJV1ppMS1haE53dm9kUHBtb0dlLTRocEotRmhJRThsNTB0dkJsREh1SUhvaGF3d3QyRUdNV3ZnN1VxNXN1VDFXajUzNUZLdDhNNGkxVWg5aF9sRkdQZmJDX01LUmQ5Y0xoVzVTckZ3UnFoSDNZNG03clZ3dTZmX1EzcEpMOHEtd2Zqb0h2dVNhQ1pqeE1YdWlxTERqT01KbUlTQk81ZUdCNHNEU0hQMzR3a08zSzRfRk96YURjSklodVVocEdmckhUNGpmc1JDSUVfYkpGN2Q5NU5scEFXeS02OXQ2ZWZEdFhWcXF1OUxlM2JLRHdJbHZ1cWswQVpYMkl4TGFUM3hPcHRPZnlsamhMZElLYmVBYnBhN0l1ckZJLTF0dFdHRnBhNTlfWVBsS2xDdENicUZ0bGZmUVpRWTZHNFZSbjdlU0E3TlNrZGNYcFF4Q0E1QmszNXpLalFBdFc1T050elJTYXY5SC00N05wRlBNZ2ZEb2dKU2s3eDhabzJ2RGVlN0l2Q1hjTHE4RUpnajRFU0JtVFphNVhpNTJfb0JWVjVza1JIS2tjdXVHb3AyZHAyOFBpVnhNWGdubnp5ekxMcm1ERnZWdDRXUlh1OVE1TWVndkg3TnVrSlEzN3VVazRmazV5MFA3RkxjSUhFdy1VcTVSb1ZxNWNGU0pMNzAzSUoxZTVRM2UzakVEOFEtcF9hS0JlWmJsLUlDVXQ5dXhHNzZqWFNMMktaaWVQd0gwd3VyZjd4NXhyOXByb2tZQ3RJT2xhS3RMZXFUeDhjdUl6QWd4X0pPcGxsVmRISkMzV3JsVkU2NVRvLW5sbUotRktxcmRhbmFScC01X2luTmlBc2duNUtaNmFQemR6Si1jc29ySVRMNkNGeHNsNTVRUWF6dGtKVjJTX2hPMWZWd2tnVGNTR01ubEpKZzlBMC0wOGgybWZuTXEzU2wyc1BETGNlRkg5MDdsZ1dMdFcxbVlWTjZCMTRpbTZNTnJRNTVSc1d6bHVoa09RTHZPNjRaWlJuRnlkVXZyTXd1N2xNRHJGcmQ3NmxULTViaFFuWHpUUmNTbXBRNDdrZUZNeG00WHJtcVRnUG5VbjZTWVlmcWF4UWpWbEx1U0lSQUtXUzdNX0VyYU5aRzJOalFQei0tOHF3Z0c5MGFyZy1oSzJIUmpCMUkyRUVWckx6bl9lcUNhWVU3N0kta0lqRndRNF8weHdVdzh0NkdleENfa3AtbFU0Y3JkM3RrMzFSLXN2dUg1bTNkdzR1R0dfOEZOaGF0enVWZUIxTkYxWUVSUk5JN0QzT3ZKbkM0YjFDZjFSOF8xSXM0NUhsWnNjMGdSWm10VnUtY1pkblZKZ2kzNWxVWlNyWU1ud1Y1TXlTT1JBUFdlTGN4QjBKVHVXWVZ0TWN4OGRKM0laT3BvZ2haZExQQnZFZ3VnM2dnSHB0UE53MC11Mi1ZQ3FmaUxzRlhvbHltWk1XOTIzZDJWQW5uenEwYmpvbnppaEt4Ykd1QzRsNU9NeEloQXBJRlF6WTN3bGo5R3F0WGVOVFVPSDNndThLMmYyRDNQRFBzdi1qYmhpYUFGa2FtWnFXTEpGZjRaeTNfMVVacGJLT1VpTmVKSjRYaURfZDN5bEtleWJWZUF4N2RPSVUzZUgteFBJUDB0MFZqUW1qQUNmREtJS1REam0wS0hGbGo4N1Vkck9DdTdESU1YV3R5SmZpZk9aSDg2NGxLOGgwV1YtNzdqRnVKZGFhcV83b3RfOHVSb0VnWUQ4VngzVXJSanVJN2FzUXNzYXlFMUxLRHhiQUxOYnhJU1VPX0pIZTVueWstUm0wbm9jcUh2VUtIVnk0emx1bWIwLUhPMVFhbkZ5Zk54LXNlSTNxYjFpSXBHbDQyeXEyRW0weHVoc3BialpVendIeUdjamtVTFduUXJYVzNIVmFlYTgwdzc2QkR1NnNFeFo1X2Y0a2RkalpNVk83VEhDSXByRGxqeERXRDJ5X1cxWkc5YkJzbVBub01qdXlLY1hrY294bGRVWlg3ZzVZX2JQQnp0Wi16dEVsSVBhMlVpY2lMOGcuQlliR3JKQ0ZheWM1aEZfZzQyR1dWdw==","password":null,"hsmProviderId":0},{"id":8,"alias":"Generated: ENGINE","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uQjdQSmJtRWxSUEdKT1BDbUxuTzI0dy5mNXB3UV91ZWYxZUstVlMtZDFhdHpCaU1ZclNDcUIyY1ZncnpHbmRQODZaYnhRY3FPdjhsMC1VaDlVREs3cXhyVHRCY1ZXVk4yRU5qaHVWeU43UzZjZEZsV2FLVzBBMWU0TjYzWklPSnFGWVg0bmlRRGh3QnJOaUNyaFAxMjVZcWUzbWN2dlFNLUJSRWhQMmRnaEJaanpEMjFtem9ZMDZhekwzckZHbVM2UGVtUHAwU05qTnFJOF9ENklha3laSWU1MV9PNEo5eXhjS1lpaV83bTRGRWROVE1wbm9TcFZ3NVBQLXZhS1BWeGlucC1BWG12alg5Wm10TGJLcjk3aEtuV3VMTjRHX2k0WmFnSldQVG5SWFZrSnhqUDRuZ29XWWtWSmF1WEUzOHp2WUlSTEttZ2JaOXpJQjJNcTd2Mlg1SDRkV21EV2tRY1ZSYWJvWmJVTVgtbHhYT0gyYlQtSjVncnlGMFRBZGtGdWVjWXQ0bGNKT1VydHZ0cWplYUJRY1RVb3I3T2ZsaDhqd09ISFFwSzRUdTFOZC1VakpGNVRYNEV1RVlWUzdSZGduMHltNGJBZkZZT0tSdVg4SDRuS1pVU3pkYkpzZURFUE00YXBMbFZmQTBMNk5iM2JZY1RHbk1ibTlDSE03cHlUMUNDNnVGOXJBY3cyNEUxdUxqMVhMd2xsY3JLdGRJT3dvYXNSUEFuejhRNGpQZUZwemo2N181b0xjdWthTEE5RExULVF6ZXoyUnF1NzBwYXV0TzFXZTFyX1g1TW02c1h2cEVCN0NnMUhsaU5ZSTNrcFFYYzBqbEFZNFBVZjRhU1dRVnREcGdXNVdZQ2hkbWY3dXFWWEt2VDF6NG1BWW11bHRFb1ptaGlsbXFQU2cwSXdJRldkemlNT2tNd2dmNGlzT2Qwc0gzVG4yaGhQZlhYaEJQLWF2RnhIcnVGaGIteWdDQVh0QklvN044d21nNHlaSGZReWlQOGplRjJVNlFINXZ1Z1ZwNnZqNzN2WGY4YmNicUtOYjhPTEExdjRMVkJPOElfZXc2bjZ4b0FNaVR2Q2ZHYW44bEQzRXNmd3JweUdDZGQtcGVOMUJ6aGRKdmtQRy10WDY0bUJtdkdtam9QUEZKcDI2UVFFellQUzJNM2QtS01FakY4LTk5NXpjOTA2UFFLM0tUTTNYemhhT0RzWG5DQzdaQnlNTVJnY1lxendwcHkteXBuTldZdmVRVFdXSVdFekJzM29aQXBETXhtVXhjcTMtamw3REZWR0JoZXhmQXc5NmhkYmRnaW5aOHQ4aGg0d09XdlhnaHpLVUpnOTZuMUlNeXFSRDh0cmpTWVlldm9TQzh5TkZkektLQzFaRTRVNm92VW1TOWQtOGFiazE3QTFDcUxIRjdxaVJBRUpxTVpRZGp4U0ZZcDd6aHVmRURHczJIN2xIeEEwZ2NpSmVaUjloWVlOQXJKVXBhenpQa1ZIRV9MWWhhR0RWOUVVdWx3VDhkM2dJUzJTZmhkNWpMVDIxUFRvb0hHN1VMVGpHTk5pem1Td3pFN0JaaDI3cXVKVnJWMFdiWTFWQ2ZwbU1hRlJOaWhucERrRUI0MGRKNGI5UTBaNnVQb3hYN2RWT0RzbUw0UHhES3R6NXNMaFh1QUJyNVZJdEJkNFg2ZU1VU3U3MEJjVFhCZTBhTUJSQks5NjZxajc2TjBIZlNiVEVtRHRGV2FuazZZTkthaGhHMnVOWlpUQjVsVmxPY2tZbTNBYXZmSV9aRDV6WDJJb3FPMFJQNXFZQ1YyUEJ0c245RkltdzU1M3NrUzhmYUFESVRxZ2pLV1pTX1JNVnJsMU5HOUs4UnA4TF9LRy0yRnpNM1k0MHh3NFNxSl8xOFRJN2dHSUFxaHFtNWZqSGRUdzJjSXR6XzJTRFF5Tkg2NVlIOW1KMlBiS0gxbzlrbWl3ZmptTXV6eVBnMlQ2WVF4VlloeWZWa0I3Y3g1ODR2X3lGQlFiVVZIczRXOVkxOHBoQjhqcUhGWGxWdGVVUEtmbGhydGZtLUJlenlLTzNyUDB6bm1HM3NXbkkxemI2dHBJczBjLWFaUjk3WUxhWWpYa3dPWjRwMEN4aUtIYWpkdnFmZUxRT3dTOHhYOHd5d1RNcGw1TnVYdDV0SjFqQWVKOG5aTjlUczJzekV1NDE4VURDM0VYNFl4TDVhZGs2a1NHZHZ3TWJMWXBOZzVfUUkxeUdrUXlvVFBKX1kyekJsU3pkRFV2Y0pGN0RKMEEwT0otRnFvUkdjOGRLNmRUYjNKckZvRjZWNlYtSnJ1bkpreXpUWDhZcENUUlFkTnhYck9iVHoxR2VBSXFpMWJRYkYxNzlJaklENUo0YnBRUEVtU005dXNXRUVlN3EwajV6RnFQUnlGUlFKU20zdGNSZnZPWmhYcXV0dEtmRE9IZmhyYndBbUZ4Wi0wNTNUcVRwdUY3STllZVFpYm1jY3l1TjJTSWdMTUpka1lyZ3VDZ0dtRm04OVFvUU9pZWsxcVNfTllXZjBfWFFGaHZjWkxkNTYxcWY3YUdNZFVRMW1uMmMzaWRwVjdLMEFzbGlGZy1sOFJ4VGlNN1VwYUVWWDU4Vk9ycVpXVFpSUkVCczV2VzVmODlRbnBQczV2Y0p5R0xjbjZXN0F3ZEEwUDZacjdkbTB2dU83dmVFVFBHYlBXUm5ZZkFsbW1mZHFxQk10QnFrb3ZxVGpXY2lrM3pFaFp0QTkzbzIybFFNNnBxdXl4WWNQM25OelpGSUNfb2g5ZDY4VGdUSE90cnJXUWZndlhqMGNTTUk0SjlKcURxdk05TG1wTjZjbThSOS1uRlg4ODZ2QU00MjJxVlc5a1lMRW1DRDg1WkF5dkJtWi1mMmRpdFBKZXRaQTVwSDhvWjdnNWYtY0Zjb2hEQnlWU2k0VE1DNGRKQlNsdmtldE1NcW8tc0pXd0Ztd3pTNWl1RVhfbFl5Rk8yMWhiX2RUaXZDSHhSZE1ramt0WldrNkptQkdmTUZJMDdrejRZOTVERldXRWo5UVdYNG9BaVBnVmxRWWZGU3FoYlJvN1pJbUJtR1dtb1lHQlluWkZ2eFI0MFpYaFRISV9nNG5POFZNb2RPbW9zQjhHekJUOURBNmd2dDlhZzMtZVlMdUpMV3EtYjR6RDdEdUg5WFBWbndkT2VRdkE3dzZIWW81MXNOTC1qOFRQZlFUbUR1dE9yT2FJNGJLQ0VsS19tRFEtZTNlYkRUWDUxZHFDeGgwVHJJS0VKaXM3TTE0TlQwZlFkZldtaFM2dmh0OHZzWnlmem1LdEx5N1JhTDBmZFktc1RnYmRWUzEtQ1ZGcG5tb1dmWVpiUkVMODJXNklJeHNpTzhXcjNLUnlnQ1Z0QnJWOXhKNGcybWUzNmZ6cURmS0hjN1lOS2k4X3hPNWVhbGVZdVNaLUdyQ1dnMGpHdnlxRV9DWmZFMC0xbTJpY05nenI5SlhGS2FrNzZMdG9TZ19yMzB4Yi0tMGVIUTNLaHl1dFM0Ym4xYkhNdXRCRDhRM1BfVHBmcDhHMnhlY1BkT2gxVm5VUlFReTFPanJHUEFvdnJuODM0bG1mam1HNzJ6azRJT21qRHhwVjNfcmNwY2ViVlYyLUExX3dFaTBHdG9DenJ5N2FTVzhFOUhJbHZZdE9HVWdHZHFBWWkzNE13S2Q1bURtWGstQmZaUmFSYkRSY19mV2plTWxKeHVnX0dpTERNNk9IQV8xNWQxd1NIYWpMYXFzcmN4b0RfS3ZHSDR1X3lRdmZIZkJMaXRib0QxVnFBVy1hZDVyc0NHYk5EaFdQdldISmN1dTgtemtFWVhJeGNzMXg5NUU5X1JYemVtMkdhYndDSk9IU3o3TUhRZFdnc1hUSXZvNVpfeWVSYnlLRGozVFpnMGdQOFFZdUJqUzFuQzJTMUg3S3hWdFdOcWMyX1hkUzhQYUFUTDk2eWs1VmRVWFNxVllnVndaNHlmNVAybzhQbFNRNUY1VEItMHRILVNWeUVFTU9vOXRqOXFETGpwQVpmWUZ0ZTd3TjNvUFkwQlV4N1lhWjZ6aTR3Q0Qyd3ZzWm5rYlhRUHFnVTVzNkd6UERVa0I1UGVGQk5Cano1Q2J6UkFjeWVGRThRaWNidXRIUU44WUFaYXg5a0cyTkNFSkRpYURlc2FQMVdCdWZ4NGl6ek01RDNOVWFaTzBrRzVDcUc2djZtZVdsdTJnRTN5UVJjU0ljUkVTZ0duLVhxd0ktMW96UkZmejJ6Z1dtaDdMVE1KS0xfbl8zSzEtejk1UTl2OVpDSVBaZU9Ea0dYLWI1cm9nS196bFRGc3FRRHNsdkJfM0pjdGN2LWdHcUtUWUdiUUxxXzFQRDRHLS0yV1dOSGxBUG9QN084NDY2LUhTbGJFakVvLTVxckhSQnBuUklUdC1WMDU0c0pJc2pGaFZrRlB6RzZodkFSdERRaUgwSjF4c214dXB2UzRwV21xYVhPOWdiWGZuSVpoaGpSSC0tTEZ4Mm5YUmNCMy1DNVhjRVQwczhrVFBiM3AwRHdkR3hkT0tWalRqbkFXY1lONGJSQkkzd0xaeUxKZ1NnYXdIcGVJQ25zVmc1VkRPTkNsZ1NSbVpQQTlJdm1JQl9NQW5IeHl5VjFfVFo1d3hUY3IxOFhPS1JsbW9fWHVpTHpBcVpSVlc2Unh4Q3FVbXIzeDl3MFRWdmJqamtBSlJfN2RPYnhQUmVCaFJBRkViTHZyNFI5T0dLajM0VG9zV2hWMFl0a1I3eEQ2MWZqaGpuRGJiVjI5RXpkaGd3ZkVCMW9vS091OWhoNFlnRkhDQURNczI3NEc0OHcuTzhGZVE2ZkdoYlRLNHNLelk2Q2s1Zw==","password":null,"hsmProviderId":0},{"id":9,"alias":"pingaccess-console","fileData":"T0JGOkpXRTpleUpoYkdjaU9pSmthWElpTENKbGJtTWlPaUpCTVRJNFEwSkRMVWhUTWpVMklpd2lhMmxrSWpvaVJ6aDNabWwwWTJ0NFJETlhOSGwyVnlKOS4uRXpFZ2lGWFBDVjhTYTZkSXEtZU5jdy5zZmxLdl9jcjVJZ0FlYTZNaXhwTDVHbDZfMWdPWTJkNHRKUlRXOVdjX1RlWndMTXdYc2NvXy1VaWxOTzl1U2t4VkJqbnZ4ZWwtMVVPeU41WFJQOVI5MmhaeWNTXzVsT1o2VE4wdkN3TGNaSG0tOXh0RWdrVDNDZ1FYaXAwTjZsNkc3aTkxSDdHdk1wMXBlYkJEYm0xVU85bkZsS3ZSYjVwY24xVXpCZ0dSMVRRVnpzRzlvSlc4UEVhUWxLSnB2ZE5uRDJSSjg1bjU4MWVhWGJTLVpMUzlHVEhIbHowbVIwTFNkX0hxeGcxc2VtRmFGUllTckJVRzFkUkIxRHVHNFVZdGxrb29JN0NNODlTeXVFWFY1bjJ3bjd1dXNWbnJkVTBEQ1dXeG5MVmtaYWRPWGV4SkFWM2RWQmhIMVIwa09vSm5NeTJzVnpmR3lHTndyQjcxZlZzQmExbEdUOUQ5WXlvNlphZTZuN1Y3SVF4WFhjTmlpbTFzOUR3NW1VZ1ItZ3dqREFrTi1lczlraU91ak5kZjhqaEx2SHpsWm52Y0puS1VsTnB5YXJxTURJRHFuZmg1c1F6dG4xZExGNXRJREY0TDZkd211djY4RFNLSGlESlBiLU8wU2xVMkExWmRGalFmRkxPUk8wamxpdE5zTU1qVUlJMGI4RkJtUmcwb2xiQnpEejViNzJBdDBvRnZJOGtxUlRaQWpqem1CQWtWZ252OFJaTnJwVnpIMGZKRVBlaEtDdWl3VmpaRkdqTEx0OWo1bndmb1ZQb3p4TGVram9BcnlFWVJaT1p6a25EeURlNW11NThyNm9CcEpqNWFQdDgydExEM3NsRHJJaGlfNjVBUU5tbGRHQml4YnVJOWJBU1p1Y2xVaTJYT1JVSEdueG1fQXRiUkhoZ3hpRTZkUjlnQ3JLMHpnX0NmRDRJZ1pqbWctaGU0bEdYSjl3X3RybEdRR0F2SEw4cHltcmtyVHBlNHVUanJGNmFMVnNDVFFza1YyRms1Z1lMTXUtT0tSTlBRYzlwclBzTmZ5RC1CbWlLMHYyWkhhcTVrZU5LUC1mNHN4Z1pnSHlRaWFzalJ3VDVNS1dBeFdKajIxemZEWEdXZktqRGhSUXB5TU5JRnlBZDY2N0xlMGNmZW0xeVNaSTlrbEk2Wmh0UEhNTXJveEZjbFktNUVJSVhEY0lNLWNOMHdBamtPTE1RNDZGOFBUOU5yampkLUpvQW9ONkY5QkRlNlItY2FISTFfbjBwUGdTRmYtRmwzVmdwWDF2OUM2ODlSZHdmTEdfR2h0aHNVSFV0UktWeEJFS2g3Q0psT0xKN202bXlLSUhVR3luX0RLOU9BQ1ZxRThsYU44b1JQQUFDaGg0V1RrTjdrMzlPS3lnYU9JM0FFbmowQ0l2Tm5USHc1YjhoRGtYMWFUaTdGdTNjM1R4N01RbXgxbTNaTlpfaDlUNndKN09uVWJIS0t4bmQxVVVFZTRkdjltRmNTcWVRcFhveHR0T1BfZHpibmg0cUU0TG5Zb3QxWXBDaC1wSDRPNmtlbGU1ejlVMHdhTlZXRVVDV21Wei0tNmZhWFZhN0tFLWtCT3JmR0FGSEJYTFhKTXVOQ3p5NW1xWFRLZThFd0hBa2I1cjFKaDlCRGN6QUE5TW9ZTjkyNTZpVW1FT0xzbGRBWTZ3eHdMUnlSbk5La0ZDQkdVSU83SC1JWWpSdk5wNElzX3pvUVBpVWdEd0pXQTJ4R1FzOElFX2UwV0FtMHdwNHpQWVpzUmZ5NlY5aXlSR0d6N1pkTnphYTVoT3gyVXU5MF95VTlOMUdQaEp0WUpoZDRXdGVjSW9pdGY2REt5WDk3OUxtUE5mRHlHVDdlZ1hLSnBOOEF1YmdTNmhwZ1RkWTRtb2xwWl9Fa2tOT29KQjVJOUk5YVAtel9jemZQV0J6cDdMM1RsWHlGVmNZTGs2Q3NQSlFaenNFYnk1S3JWM3NVaWJsU2hYZklNYXpHR01UQ3hmLWZFUGhmbmsxYk55VmQ5Y0Y2Tk5zbXlLWE5nVURfOE5BWFdlTlF5UC1xOEJUSmZPdjhEWFlkRTdXcmRTU0RoQXpKcjZnVFZxVWU4WmdhQ2lVMEJxb2ROYlpXY3JOUVJ5MElqMFZJV2tVczlxNjFoaDV2M2k4Q19seVRMeDJvZ2dqS05fQ3JCSER0VEdQYU1yRVczU3p1akc5Nm8wS19vazFPTDhBQ1BrWWNBTDBDTEwtOGN0TFJtSEhhSGhGZTA0NFJsb1NwR0VRVndwLUVYUVp3LWx4c0tiMndrUGk2SWZoWER5RDlHMGZZZnZiR3VGOHFSb1hneXBmdGkwNWlpOXpxWHhTWHo3MjF6cXJ1a0RkVXEtaFRDNE41M3FGcGRqSm1JR24yR3RqdUhzMmtNYTNJcFNlb3lPTXdDQkFyMHg3ZUcwNzl2QktaeGI2ak9BTl9OWDdvbkUzN0I3R19SaGkyMzJUQldfVlRPeGlzdXlobWZvek9WMkVybmFyWGdGcG9mRU9sRC0zNXNjWmk4ak9udHN1ckxRWTl6VlFQVVBjZ0ZsNF9fVFVCZTNRVlp2eS1PWXpGek02Q2lWVmU5TWYtV0dpNklQYldMbHJpc0dUbTJaU1czdFkybzMtdG5WdG1MTHdZX2YtbEZ4anlZTDhKUWh6R2JDb0ZROERpeDdLUjBRcU54eDNORXVIbWVJVzlzaWhmeG9sbE1OTXc0c3ZZTzlEUEdPc3lOdEZPTnZNTEJKZDluQlE4UGtUMUczQ2FlX1V4UWF0UTB4bDhOeGxwVmQxc2Y3QTRLZGlNOEYydnZ0TWNGbVlhQ0R2NXBqNXNXZ0NFMnRQS2tUSGhiTXQ4NkNIS0dXQWdFNXg4dDJCeFNHZFlxREdfam41cmMtaG1NbV81a0E2ck9KZGlVUnUyYUlTdS1HdGNJbkVyaEpWY09PZ2F3cXlnZHdYcU1rbXlMOXA4NXRKeVR5a2hobkN2eXhmN1NvcDVRMndlWmJILTBUeXRNU1FXb2x0TlM5YkszSGFyUE1MeFhhSjJlUFhRQTB4dWpBR1FPc1NyUDNKZ201cmdIX21NbWczMFNsX2tlWGU1VXpiZEZmSm9KcjFVLTE4SERrQ05LaUdNX2t4eHMyR0JkNHJxYUN6ODc5MmpVVk16ZG1jUDhMalhYNEdZSnRYZUxYN2xYSVFtX2ZvclE5Sm5zSXRGdktHVWtqUG14WC1pLTNpNE9tQnBfTEhOeG0ta0VEbmtqX3BYdWRJZ1VWQVVQWmFnbkpFT2Y1T3dLQlFEdUJ1MG55eDV1VXNIZUlUMFNKY29qa05YWnl6NzJTVXVmdEhKMngxb2NHQXJjTjJ0WF9KanJFcFgtZV9zQ1l6Z3prdWVTYU9CMS05UEkzaUJmQlRiWUFRc3d0VzhrOVRLNlpvM3h0MnloYVgzLWJpRzhJQzVCX1RMbjdNX2RnOTFEa0tsS3V3TEJRTjIzZ2JITmlobHVMcGpPZmlVdm1aQUYzOTFoUl9PLVdRZVVfaDJkZTBTdFRLblJSQ2U5ZEgtdnNsakNGSkI3eTF6b1YxRV9Td1daVlFGam0wRUJFWmJXMUNYTmwwRjJ4SlQ3al9xN3hQM2tiTnQyX3lPaUZYd3Q3bTQxek90M0JOMTVJS2g0aUpBLWFTMVV0ZzVfZW5EYzE5SWZnbWtHOWhxTWhrcUQ1a19zaHFzWDlESGR2OW80QW5ac01rNnVwdExxdTUwbVRKT29ObG55TTR5XzFpTDdZT0ZqbGhuWXJsdWZmTnZzODhQVEl4QUhiR0N1YjllaVQyZld1cWRyQmVhaFJ4d245b1Nmb3pwbVItMTdPWEJ5dVBKLXdGLW9uaEFJdnE0ZkdZVV9jZ3d0dzdFOWZaQ3ExLTJKWWtRenRwNEtRdlctLTlJN3pXNTZnTEtERENCbTBpc29EOGdJZVl3MUtnSUMzV0VsTGxIS04zZ1JkOWFoQW5CLVFncE10clVObG5YZEFUczdZaFJwMDFFMTd4bk5SeHBmZ1g3dXFWYWZPRk9SMFczR1VPQl9ubnJ6dUczVy1TZHU0YXE2MGN2TFNXNU5iMXhiaVppdFBJYklnMmFxZG16ODhUQWt2emtjemVVblB5V1dQS1B2REdOOXZRNmxhUnZnTXZKUzdRT0NpVGxXNmhBVnd5cjd1dFFBRUYzbEFWVUVmcmhZam95NTc3M09jZ3NLbldnYkpmME13OW54SzVWaDRxYVZYcTNFN0oybkpiYVc4bHFWdnNpVmFnejRNblkwOG55WTBDM183SlViOGZVME5MSjFoeE9oTmtENHJicEpuQzBhYmtLV0k4UUVXcXhzZVYwZGNqUEhvbG9nQy11bm1LQURSVU9VV3NNRWNfbUZJVmY0bHhFMWxtUTZucjJNcmtjZ25aM1NpWWlEWUZEaGowRnNKVkZQZ19jNXdHb25CbWV5MXRob3g4Z3NITWo5NXpQaDVTZzNma3d4SnJKcEx3T3lIVTJucjE4RElHZW1uVWZPSmQzdnVhZlhYek9qT09EVHBvZmN0SW9SdUFTa1N3cFhKTFhBcnJmYVRDZDdTdkM4akNtdTJxejRpNXpBZDE1SzdTNlhsVEh4MGllMmloa091VTZ6dUg2a0MxZGE0dVRDdTlheDV2eF92Wi12NFFfVWVZOTZLcG1CTlB2Nno0SjQ1WDZxQnFleXhsUEJEOVA2clJ4cmpkNTFmTHBsSGtMYkZFNjBoVG5YQ1kwTVRydFdSU0o1dklNT2lYSTVpeXFfYWJRa1FlbjlQOUg2cGczQVNKQXppMk1CNUZxZnVKQ0JiNHlrT3VXbG81OVVLeFVZN2VSeVNteFFHWjI5WUw1RU1FZFF5LVNVRnl4QXRyamZZZzY2WWk3LWRyeVFPYXZnLmI2N0Jwa2t3eHZiczU0VnRkN3JRRGc=","password":null,"hsmProviderId":0},{"id":10,"alias":"ca-keypair-28411","fileData":"","password":null,"hsmProviderId":0}],"loadBalancingStrategies":[{"className":"com.pingidentity.pa.ha.lb.roundrobin.CookieBasedRoundRobinPlugin","id":2,"name":"Default Round Robin Strategy","configuration":{"stickySessionEnabled":false,"cookieName":"PA_S"}}],"oauthKeyMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"signingAlgorithm":null},"pingFederate":{"targets":["pingfederate:9031"],"skipHostnameVerification":true,"expectedHostname":"","backChannelBasePath":null,"backChannelSecure":true,"useSlo":false,"host":"sso.data-holder.local","port":443,"basePath":null,"secure":true,"trustedCertificateGroupId":4,"useProxy":false,"auditLevel":"OFF"},"pingFederateOAuth":{"clientCredentials":{"clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..YzXT4cyrlXFxw4y7sV32RA.E-vNXDfK3DvaCvNlna4gVw.HDqF18EjdE2CjgGL-1xaVA"},"keyPairId":0,"credentialsType":"SECRET"},"cacheTokens":false,"tokenTimeToLiveSeconds":-1,"subjectAttributeName":"sub","sendAudience":false,"useTokenIntrospection":true,"accessValidatorId":1,"name":"PingFederate","clientId":"pingaccess_validator","clientSecret":{"encryptedValue":"OBF:JWE:eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRzh3Zml0Y2t4RDNXNHl2VyJ9..YzXT4cyrlXFxw4y7sV32RA.E-vNXDfK3DvaCvNlna4gVw.HDqF18EjdE2CjgGL-1xaVA"}},"rejectionHandlers":[{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":1,"name":"Default Web Rejection Handler","configuration":{"responseCode":403,"templateFile":"policy.error.page.template.html","contentType":"HTML"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":2,"name":"Default API Rejection Handler","configuration":{"responseCode":403,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":3,"name":"Default Rate Limiting Rejection Handler","configuration":{"responseCode":429,"templateFile":"oauth.error.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":4,"name":"AccessDenied-InvalidHoK","configuration":{"responseCode":403,"templateFile":"oauth.error.invalidhok.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":5,"name":"AccessDenied-RequireMTLS","configuration":{"responseCode":400,"templateFile":"oauth.error.mtls.json","contentType":"JSON"}},{"className":"com.pingidentity.pa.policy.rejectionhandler.errortemplate.ErrorTemplateRejectionHandlerPlugin","id":6,"name":"Introspect-EnforceFail","configuration":{"responseCode":200,"templateFile":"introspect.fail.json","contentType":"JSON"}}],"reservedApplication":{"contextRoot":"/pa"},"resources":[{"id":1,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":1},{"id":4,"name":"DCR Create Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":8}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":5,"name":"Revocation Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/revoke_token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/revoke_token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":6,"name":"Introspection Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/introspect.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/introspect.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":6},{"type":"Rule","id":5}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":7,"name":"UserInfo Service","methods":["*"],"pathPatterns":[{"pattern":"/idp/userinfo.openid","type":"WILDCARD"}],"pathPrefixes":["/idp/userinfo.openid"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":8,"name":"Token Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/token.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/token.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":1},{"type":"Rule","id":6}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":10,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":5},{"id":11,"name":"Well Known EndPoint","methods":["*"],"pathPatterns":[{"pattern":"/.well-known/openid-configuration","type":"WILDCARD"}],"pathPrefixes":["/.well-known/openid-configuration"],"auditLevel":"ON","anonymous":false,"enabled":false,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":12,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":6},{"id":13,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":7},{"id":14,"name":"DCR Management Endpoints","methods":["*"],"pathPatterns":[{"pattern":"/as/clients.oauth2/*","type":"WILDCARD"}],"pathPrefixes":["/as/clients.oauth2/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":2}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":15,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":8},{"id":16,"name":"PAR Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/par.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/par.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":3},{"type":"Rule","id":7}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":17,"name":"Authorization Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/as/authorization.oauth2","type":"WILDCARD"}],"pathPrefixes":["/as/authorization.oauth2"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":7}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1},{"id":18,"name":"Root Resource","methods":["*"],"pathPatterns":[{"pattern":"/*","type":"WILDCARD"}],"pathPrefixes":["/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[],"API":[]},"defaultAuthTypeOverride":null,"queryParamConfig":null,"rootResource":true,"applicationId":9},{"id":19,"name":"CDR Arrangement Endpoint","methods":["*"],"pathPatterns":[{"pattern":"/arrangements/*","type":"WILDCARD"}],"pathPrefixes":["/arrangements/*"],"auditLevel":"ON","anonymous":false,"enabled":true,"unprotected":false,"policy":{"Web":[{"type":"Rule","id":8}],"API":[]},"defaultAuthTypeOverride":"Web","queryParamConfig":null,"rootResource":false,"applicationId":1}],"rules":[{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":1,"name":"MTLS-HoK--SendThumbprint","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\n\ndef HEADER_CERTIFICATETHUMBPRINT = \"X-CertificateThumbprint\";\n\nexc?.request?.header?.removeFields(HEADER_CERTIFICATETHUMBPRINT);\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  exc?.request?.header?.add(HEADER_CERTIFICATETHUMBPRINT, getThumbprint(certChain));\n}\n\npass();\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":2,"name":"MTLS-HoK-VerifyAccessToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"4","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import javax.xml.bind.DatatypeConverter;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.cert.CertificateEncodingException;\nimport java.security.cert.X509Certificate;\nimport java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef authHeader = exc?.request?.header?.getValues(\"Authorization\");\n\ndef certChain = exc?.sslData?.clientCertificateChain\nif(certChain && !certChain.isEmpty())\n{\n  if(authHeader && authHeader?.size() == 1)\n  {\n    def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n\n    if(validateThumbprint(token, certChain))\n      pass();\n    else\n      fail();\n  }\n  else\n    fail();\n}\nelse\n\tpass();\n\nboolean validateThumbprint(def token, def certList)\n{\n  if(token != null && token.startsWith(\"Bearer \"))\n  {\n    def accessToken = token.replace(\"Bearer \", \"\");\n    def cnfValue = getAccessTokenClaim(accessToken, \"cnf.x5t#S256\");\n    \n    if(cnfValue == null || cnfValue.equals(\"\"))\n    \treturn true;\n    \t\n\tdef expectedThumbprint = getThumbprint(certList);\n    \n    if(expectedThumbprint != null && cnfValue.equals(expectedThumbprint))\n      return true;\n    else\n      return false;\n  }\n  \n  return true;\n}\n\nString getThumbprint(def certList)\n        throws NoSuchAlgorithmException, CertificateEncodingException {\n\n    if(certList == null || certList.isEmpty())\n          return null;\n    \n    def cert = certList.get(0);\n          \n    MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n    byte[] der = cert.getEncoded();\n    md.update(der);\n    byte[] digest = md.digest();\n    String digestHex = DatatypeConverter.printHexBinary(digest);\n    return digestHex.toLowerCase();\n\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":3,"name":"MTLS-RequireClientAuth","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def CDR_CLIENTID_PREFIX = \"dcr-\";\n\n  def token = exc?.request?.header?.getFirstValue(\"Authorization\");\n  def isPass = true;\n\n  def clientId = null;\n  \n  if(token)\n  \tclientId = getAccessTokenClaim(token, \"client_id\");\n\n  if(clientId == null)\n  {\n    def clientAssertion = getRequestParameter(exc?.request, \"client_assertion\");\n    if(clientAssertion != null)\n    \tclientId = getAccessTokenClaim(clientAssertion, \"sub\");\n  }\n\n  if(clientId == null)\n    clientId = getRequestParameter(exc?.request, \"client_id\");\n  \n  if(clientId == null)\n    clientId = \"\";\n\n  if(clientId.startsWith(CDR_CLIENTID_PREFIX))\n  {\n    def certChain = exc?.sslData?.clientCertificateChain;\n    if(!certChain || certChain.isEmpty())\n      isPass = false;\n    else\n      addResponseHeader(exc?.response, \"X-VALIDATED-CLIENTAUTH\", \"TRUE\");\n  }\n\n  if(isPass)\n    pass();\n  else\n    fail();\n}\n\nvoid addResponseHeader(def response, def headerName, def headerValue)\n{\n  if(response)\n    response?.header?.add(headerName, headerValue);\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def postParams = request?.getPostParams();\n  if(postParams == null)\n    return null;\n  \n  if(!postParams.containsKey(paramName))\n    return null;\n  \n  return postParams.get(paramName)[0];\n}\n\nString getAccessTokenClaim(String accessToken, String claim)\n{\n    def accessTokenSplit = accessToken.split(\"\\\\.\");\n    if(accessTokenSplit.length != 3)\n      return null;\n  \n    def accessTokenBodyEncoded = accessTokenSplit[1];\n    def accessTokenBody = new String(Base64.getDecoder().decode(accessTokenBodyEncoded));\n  \n    return getClaimValue(accessTokenBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.cors.CrossOriginRequestPolicyInterceptor","id":4,"name":"CORS - Allow All","supportedDestinations":["Site","Agent"],"configuration":{"allowedOrigins":["*"],"allowCredentials":false,"allowedReqHeaders":["Authorization","Content-Type","Accept"],"exposedRespHeaders":[],"overriddenReqMethods":null,"cacheMaxAge":600}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":5,"name":"PingFederate-RestrictIntrospectRefreshToken","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"6","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"def request = exc?.request;\n\nif(\"post\".equalsIgnoreCase(request?.method?.methodName))\n{\n  def postParams = request?.getPostParams();\n  \n  if(postParams.containsKey(\"token\"))\n  {\n    def tokenValues = postParams?.get(\"token\");\n    \n    if(tokenValues.length != 1)\n    \tfail();\n    else\n    {\n      def tokenValue = tokenValues[0];\n\n      //assuming access token is a JWT\n      if(tokenValue.indexOf(\".\") > 0)\n        fail();\n      else\n      {\n        if(!postParams.containsKey(\"token_type_hint\"))\n        {\n          def bodyStr = new String(request?.body?.content);\n          bodyStr = bodyStr + \"&token_type_hint=refresh_token\";\n          request?.setBodyContent(bodyStr.getBytes());\n          pass();\n        }\n        pass();\n      }\n    }\n  }\n  else\n    anything();\n}\nelse\n  anything();"}},{"className":"com.pingidentity.pa.cdr.CDRRefreshTokenProcessor","id":6,"name":"CDR AU - Refresh Token Processor","supportedDestinations":["Site","Agent"],"configuration":{"issuer":"anybank","encryptionJWK":"{\"kty\":\"oct\",\"k\":\"Fdh9u8rINxfivbrianbbVT1u232VQBZYKx1HGAGPt2I\"}","retainAttributeList":["cdr_arrangement_id"],"tokenEndpoint":"/as/token.oauth2","introspectionEndpoint":"/as/introspect.oauth2","revocationEndpoint":"/as/revoke_token.oauth2"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":7,"name":"FAPI Conformance - Fix PKCE","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"1","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\n\nif(!exc?.response && getRequestParameter(exc?.request, \"request\") != null)\n{\n  def requestJwt = getRequestParameter(exc?.request, \"request\");\n  \n  def challengeMethod = getJwtTokenClaim(requestJwt, \"code_challenge_method\");\n  \n  // Removing S256 code challenge validation however it may come later\n  \n  // enforce S256 challenge method\n  //if(challengeMethod && challengeMethod.equalsIgnoreCase(\"S256\"))\n  //{\n  \tcopyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge\");\n  \tcopyRequestObjectParameters(exc?.request, requestJwt, \"code_challenge_method\");\n  //}\n  //else\n  //{\n  //\tclearRequestObjectParameters(exc?.request, \"code_challenge\");\n  //\tclearRequestObjectParameters(exc?.request, \"code_challenge_method\");\n  //}\n  \n}\n\nanything();\n\nvoid clearRequestObjectParameters(def request, def paramName)\n{\n  if(request?.method?.methodName?.equalsIgnoreCase(\"POST\"))\n  {\n    def bodyStr = new String(request?.body?.getContent());\n    bodyStr = bodyStr?.replaceAll(paramName + \"=\", paramName + \"_old=\");\n    request?.setBodyContent(bodyStr.getBytes());\n  }\n  else\n  {\n    def delimiter = '?';\n    if(request?.uri.contains('?'))\n      delimiter = '&';\n\n    def newUri = request?.uri.replaceAll(paramName + \"=\", paramName + \"_old=\");    \n    request?.setUri(newUri);\n  }\n}\n\nvoid copyRequestObjectParameters(def request, def requestJwt, def paramName)\n{\n  if(getJwtTokenClaim(requestJwt, paramName) == null)\n  \treturn;\n  \n  if(request?.method?.methodName?.equalsIgnoreCase(\"POST\"))\n  {\n    def bodyStr = new String(request?.body?.getContent());\n    bodyStr = bodyStr?.replaceAll(paramName + \"=\", paramName + \"_old=\");\n    bodyStr = bodyStr + \"&\" + paramName + \"=\" + getJwtTokenClaim(requestJwt, paramName);\n    request?.setBodyContent(bodyStr.getBytes());\n  }\n  else\n  {\n    def delimiter = '?';\n    if(request?.uri.contains('?'))\n      delimiter = '&';\n\n    def newUri = request?.uri.replaceAll(paramName + \"=\", paramName + \"_old=\");    \n    request?.setUri(newUri + delimiter + paramName + \"=\" + getJwtTokenClaim(requestJwt, paramName));\n  }\n}\n\nString getRequestParameter(def request, def paramName)\n{\n  def paramValue = null;\n  if(request?.method?.methodName?.equalsIgnoreCase(\"POST\"))\n  \tparamValue = getPostParameter(request, paramName);\n  else\n    paramValue = getQueryParameter(request, paramName);\n  \n  return paramValue;\n}\n\nString getQueryParameter(def request, def paramName)\n{\n  def params = request?.getQueryStringParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getPostParameter(def request, def paramName)\n{\n  def params = request?.getPostParams();\n  \n  if(params == null)\n    return null;\n  \n  if(!params.containsKey(paramName))\n    return null;\n  \n  return params.get(paramName)[0];\n}\n\nString getJwtTokenClaim(String jwt, String claim)\n{\n    def jwtSplit = jwt.split(\"\\\\.\");\n    if(jwtSplit.length != 3)\n      return null;\n  \n    def jwtBodyEncoded = jwtSplit[1];\n    def jwtBody = new String(Base64.getDecoder().decode(jwtBodyEncoded));\n  \n    return getClaimValue(jwtBody, claim);\n}\n\nString getClaimValue(String responseStr, String jsonPath)\n{\n    ObjectMapper mapper = new ObjectMapper();       \n    JsonNode resultObject = mapper.readTree(responseStr);\n\n    String [] splitJsonPath = jsonPath.split(\"\\\\.\");\n\n    for(String path : splitJsonPath)\n    {\n        resultObject = resultObject.findPath(path);\n    }\n\n    return resultObject.textValue();\n\n}"}},{"className":"com.pingidentity.pa.policy.GroovyPolicyInterceptor","id":8,"name":"MTLS-RequireClientAuthAlways","supportedDestinations":["Site","Agent"],"configuration":{"rejectionHandlingEnabled":true,"rejectionHandler":"5","errorResponseCode":403,"errorResponseStatusMsg":"Forbidden","errorResponseTemplateFile":"policy.error.page.template.html","errorResponseContentType":"text/html; charset=UTF-8","groovyScript":"import java.util.Base64\nimport com.fasterxml.jackson.databind.JsonNode\nimport com.fasterxml.jackson.databind.ObjectMapper\n\ndef host = exc?.request?.header?.host;\n\nif(host.equals(\"pingaccess:3000\"))\n{\n  pass();\n}\nelse\n{\n  def certChain = exc?.sslData?.clientCertificateChain;\n  if(!certChain || certChain.isEmpty())\n    fail();\n  else\n  {\n    addResponseHeader(exc?.response, \"X-VALIDATED-CLIENTAUTH\", \"TRUE\");\n    pass();\n  }\n}\n\nvoid addResponseHeader(def response, def headerName, def headerValue)\n{\n  if(response)\n    response?.header?.add(headerName, headerValue);\n}\n"}}],"sites":[{"id":1,"name":"pingfederate","targets":["pingfederate:9031"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":4,"name":"Deepthought Product Admin Service Site","targets":["deepthought-admin-service:8080"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":5,"name":"Deepthought Product Service","targets":["deepthought-product-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":6,"name":"Deepthought Banking API","targets":["deepthought-bank-api:8081"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":7,"name":"cdr-register","targets":["cdrregister:8084"],"secure":false,"trustedCertificateGroupId":0,"sendPaCookie":true,"useTargetHostHeader":true,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":false,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false},{"id":8,"name":"pingdirectory","targets":["pingdirectory:443"],"secure":true,"trustedCertificateGroupId":2,"sendPaCookie":true,"useTargetHostHeader":false,"keepAliveTimeout":0,"maxConnections":-1,"maxWebSocketConnections":-1,"siteAuthenticatorIds":[],"skipHostnameVerification":true,"expectedHostname":null,"availabilityProfileId":1,"loadBalancingStrategyId":0,"useProxy":false}],"tokenProvider":{"useThirdParty":false,"type":"PingFederate"},"trustedCertGroups":[{"id":3,"name":"MTLS Certificate Group","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[17]},{"id":4,"name":"PingFederate-Trust","useJavaTrustStore":false,"systemGroup":false,"ignoreAllCertificateErrors":false,"skipCertificateDateCheck":true,"revocationChecking":{"crlChecking":false,"ocsp":false,"denyRevocationStatusUnknown":false},"certIds":[3]}],"trustedCerts":[{"id":3,"alias":"pingfederate-service","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lHQVc2MU51NDFNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1Hd3hDekFKQmdOVkJBWVRBbFZUTVFzd0NRWUQNClZRUUlFd0pEVHpFUE1BMEdBMVVFQnhNR1JHVnVkbVZ5TVJVd0V3WURWUVFLRXd4UWFXNW5TV1JsYm5ScGRIa3hGREFTQmdOVkJBc1QNCkMwUmxkbVZzYjNCdFpXNTBNUkl3RUFZRFZRUURFd2xzYjJOaGJHaHZjM1F3SGhjTk1Ua3hNVEk1TURNek1UUTJXaGNOTWpreE1USTUNCk1ETXpNVFEyV2pCc01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQk1DUTA4eER6QU5CZ05WQkFjVEJrUmxiblpsY2pFVk1CTUcNCkExVUVDaE1NVUdsdVowbGtaVzUwYVhSNU1SUXdFZ1lEVlFRTEV3dEVaWFpsYkc5d2JXVnVkREVTTUJBR0ExVUVBeE1KYkc5allXeG8NCmIzTjBNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWx5dVV4YWR3MFltSnc4U0QyS0NyakI3aVB6bncNCnNxVkxGOFBNNHhhL0xCUVNFUmVxZFZZaGpIeGFLU2t2RXZyVmJCd1ZEbnpZTjM4QVFDNlRaOWhIaHp3eXpTc2hqSUlmd0hzcm5TQWsNCjI3V2RMY2RGNDZtZFdRZCtzWkhnRzd5MHZmZVJ6Tm9sUy8xcFlDYTlkcDc0MGJrKy82dW5DcG9jc3VFL2dvdGZqQjF0cThPL1A3VmQNCkRTQ3ZzdHRXU3lyK290N1FUNUJWdlZONWt1dDcvL2ZiREdpM2VtMDBzUXdzNnRLNE5rTkxXY0NaYXNEL1E1N2tWcnp2UmFjT1M2aUcNCitzcFFPcVhuWnVoNlVaZDgxbTFSUHFBVE9qdW0yUklNSXdEWmZTR29Yd1ZUY0RGVG1tTDBGTDFFK2d2NU5ka09SdXhVdkJ6aWlHZGENCkJRcUR0ZGFpR1FJREFRQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJ0c295OXBVZ1JrZDd2OEEyelQ1Tmc3bFFDVlQ2bHprWEINCk10UGtFRkd6VHNkaDdvYWMwYU9qaFZvM0FiSXBiVE0yYTMxVWNEc1NkZlNNZjVNdi9ZM1ovaUQ4d1c5czBTeXhQUFhZdVhCSWgwVTMNCk1CM25GK1hsc1ZkS1g0eS8zQVVUZGdnek9CTGV2THBSNjhwa1pOcjYxR1UzNllOWHRCUzhxQW1sZHVyTXN4U2J1VllrZWdQU2d5RmwNCnNqWWpTYnM2b3M5WFpuOEFwL09jWkxmU3lGM1JtaXo2K1R3aHlleVFPKzMrMitiaDVOamtaZ0JHUW5CbDh6SVZZNEhPQjdPVGpnVEcNCnI1cTNvOW5xMzhwTjFtZ0pnV3dQS2JDeWxiWlczR0hHMVdKRXVxWG8yMG8zOGg1Qk1EaUJLeENxNTF3NjREakQyOUZqZzA5U1pmU1ENCm03OE0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ=="},{"id":17,"alias":"cdr_trustcert_default","fileData":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZmRENDQTJTZ0F3SUJBZ0lKQU5INjA1UkhEYW5yTUEwR0NTcUdTSWIzRFFFQkN3VUFNSE14Q3pBSkJnTlZCQVlUQWtGVk1Rd3cNCkNnWURWUVFJRXdOV1NVTXhFakFRQmdOVkJBY1RDVTFsYkdKdmRYSnVaVEVOTUFzR0ExVUVDaE1FUVZCQlF6RVdNQlFHQTFVRUN4TU4NClVHbHVaeUJKWkdWdWRHbDBlVEViTUJrR0ExVUVBeE1TWTJSeUxYSmxaMmx6ZEdWeUxteHZZMkZzTUI0WERUSXdNRGd3TkRJek5EZzENCk0xb1hEVE13TURnd01qSXpORGcxTTFvd2N6RUxNQWtHQTFVRUJoTUNRVlV4RERBS0JnTlZCQWdUQTFaSlF6RVNNQkFHQTFVRUJ4TUoNClRXVnNZbTkxY201bE1RMHdDd1lEVlFRS0V3UkJVRUZETVJZd0ZBWURWUVFMRXcxUWFXNW5JRWxrWlc1MGFYUjVNUnN3R1FZRFZRUUQNCkV4SmpaSEl0Y21WbmFYTjBaWEl1Ykc5allXd3dnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDcEpPTmwNCkRzeHVSbUJaY0FUR1RpUnFqa1JqV0xOa3psTTluamZjU3ZJSTBJNWhXemtDOEF5dEx4WHRYQnEyOEpSSzdRbXRHK0J0MEpqdFZ4bjMNClgyUWc2T3B1d2tidXlUVUw0RHMxNElSRFNPLzFrVW5xem9Uck1uUkJ1VmdiWVBHc3JYWnM0Qys5MkNZekhxVVozL0ExSC9xSkxhK2kNCmd6SkZYcmVWMGxEcHlhdWNEMnZubFo1U2FtV1JVRnNnSjZneFhzSjhlY1BoNTFNOHJvRFQ4cXhMRnBrYVVEVmYzL0xmcUIzYmZzUFgNClZUTzBqR3JBbGF5eFhMRjQzMzFuRjh0RlpCLzNBdEJDK0lrQUZnWVZEMTBxU2o5SjV4M2x3UzcxQXV3ZlFLd3ptODdhWk9uWDU3RUsNCmdaakxlcm1BV0NaTzBNOGRlZGJaSlN6NWs1U1Rja2tKWUcyaUtwbFZKdFVEMStmVVpGOHBqeDRxSGZuUFozVWhlUzNNV05SdjJPaVYNCm56RWFkZE01eUEyNkowb043WlEvR2JyZnlYelk5R2dZcUY1eUZQR0o5dTNhR3g2SlZTSWFjNDcrUnhtMEhnaEJJRm16a0JLTVVxelUNCjRwMGE2bWYvWlNTdVJweHIrZlRQUHNxa3B4anRJZkIyWXRIZHZ2Z2c0QUMyMTFHQUo0Q3Rjb0RyTGlGMjloRTQyWW9lbGRLcDB3REUNCjNoYUs2YitBODhnalhDRjRWQWRGb2c1MTFCWURXSGwxSm1SRVo1SDJLdHIzQTFuRXgxQk9SRzhvZWFxS0xxVGJ0WkcvTTlhYXZIZzYNCklhdlY0Q0M0MG5qSFFWWUpCL1hUSVNNdmZ0dG9wUldsc29tQkJIRmhTZjNuRmcrVWM1eDUrd1g3UktxUGo3RUM1SWJWNndJREFRQUINCm94TXdFVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUI5N0FTWmwwYkxudXpsR2o4dFBtRnkNCm1RZFdGSmovUS9MWlNIa2t5UVg4TCtUZndYU0ZTVjdDMHc3b0ZSY2t1bkkzTFJPQUg2dkJUcnE2V2MxL1pSWlo1SnhYVmwzelhiTksNClVMaCtoMlBUTmM2OUFtOHFwcUZrNTk5dmd2QTljTEM3VUpYK1YxWkFhM2pUNG9xL1hxdEp5ZURXbzVDOUY2K2Y2Z2sraTlGRHIzYkINClQyNWVwanRHN2tzUkRoeEF4T1JLbm9MS1FqTmhVM1U5Y3Q2RjB0VmFpTWtMQzNoejFUSHk1U1pPU294ZitpaUdXcThpOGU4MjRGcTcNCmFIckdMa1A5aUlrTzQzZXlNMk85ZHpqMXIrVEZYSnkwUVVNWFNkbUlrYjVjS1hzL3k2cDBEZFZzSmFxRGdiUnVrNmFCekhvdFU3KzENCk1EelN0ZVJJd25OdFl3MTFaRTNkbndwakhPbTk0eWpjOWFTbHRSR0tDNmo4SFByMEUxWWpzRVBaM2lnYm5PWlVCNzVXblRvTDdNOVoNClA4UjhieXd4UFk5QTlqVnRVb28yZkZaNzRJQlVvUkRUUFdyYzh3SHV3T0tldGszTXhUc0k4S3NobzkxZysvb3loSm9JMkFVR0lwQzMNCnJRZmhBcVJoYzZqSFUyU2xwQmV1aWdCQ3VKa0tQREdKdHRDMEtOK0lJRXNYMTZlSGMzZDZRMGY1RVAxMUpPSjVJNGMwaXpLRy96VXgNCnFvZzBQcG5NbEhMR2xyQU4wd3oyU0J1TWt3ZDVvKzB0aUNLVGs0UCtPdGhpYkcweWhHVDIyY050NHl1ck5rM294Mi9RTThYOGZKbnANCmIxMVVSY3REd1VNb0pDTngySHhLSUJ6QzZoUWpidE1WNVVGcXVpalA1cDQ4bXZkT29KeGZrQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0="}],"unknownResources":{"errorStatusCode":403,"errorTemplateFile":"general.error.page.template.html","errorContentType":"HTML","agentDefaultMode":"DENY","agentDefaultCacheTTL":900,"auditLevel":"OFF"},"virtualHosts":[{"id":5,"host":"sso.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":7,"host":"sso-admin.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":10,"host":"api.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":11,"host":"pingaccess","port":3000,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":12,"host":"host.docker.internal","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":3},{"id":13,"host":"mockregister.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0},{"id":14,"host":"pd.data-holder.local","port":443,"agentResourceCacheTTL":900,"keyPairId":0,"trustedCertificateGroupId":0}],"webSessionMgmt":{"keyRollEnabled":true,"keyRollPeriodInHours":24,"issuer":"PingAccess","signingAlgorithm":"P-256","cookieName":"PA","sessionStateCookieName":"PA_STATE","updateTokenWindowInSeconds":60,"encryptionAlgorithm":"A128CBC-HS256","nonceCookieTimeToLiveInMinutes":5}}}